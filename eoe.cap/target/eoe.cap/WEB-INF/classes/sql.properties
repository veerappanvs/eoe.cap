programByOrgId=SELECT DISTINCT V_ORG_ID, V_ORG_CODE, V_ORG_NAME, V_PROG_PRG_ID, V_PROGRAM_DESC FROM V_220_PROGRAM_ORG_LINK WHERE V_PROG_CAPS_IND = 'Y' AND V_ORG_ID = :orgId ORDER BY 5
candidatesByProgramId=SELECT V_ORG_ID ORG_ID, V_ORG_CODE ORG_CODE, V_ORG_NAME ORG_NAME, V_PROGRAM_DESC PROGRAM_NAME, PCOM_ID AS "V_PCOM_ID", PCOM_ELAR_PERSON_ID AS "V_PCOM_ELAR_PERSON_ID", PERC_DA_PERSON_ID AS "V_DA_PERSON_ID", INITCAP (PER_FIRST_NAME) AS "FIRST NAME", INITCAP (PER_MIDDLE_NAME) "MIDDLE NAME", INITCAP (PER_LAST_NAME) "LAST NAME", PCOM_EMAIL AS "V_PCOM_EMAIL", SD_MEPID_SR01 AS "V_MEPID", PCOM_PROG_ID AS "V_PCOM_PROG_ID", PCOM_STATUS_CODE AS "V_PCOM_STATUS_CODE", PST_STATUS_NAME AS "V_PST_STATUS_NAME", PCOM_ENROLLMENT_DATE AS "V_PCOM_ENROLLMENT_DATE", PCOM_EXIT_DATE AS "V_PCOM_EXIT_DAT", NVL(CC.CPC_CYCLE_ID, 0) AS "CYCLE_ID", NVL(FUP.FUP_UPLOAD_ID, 0) AS "UPLOAD_CYCLE_ID" FROM TC0230PCOM_PROGRAM_COMPLETOR COM INNER JOIN TC0450PST_PCOM_STATUS_TYP ST ON COM.PCOM_STATUS_CODE = ST.PST_STATUS_CODE LEFT JOIN CP050CPC_CAP_CYCLE CC ON CC.CPC_PCOM_ID = COM.PCOM_ID AND (CC.CPC_CST_STATUS_CODE IS NULL OR (CC.CPC_CST_STATUS_CODE =1 AND CC.CPC_READY_TO_TEACH ='Y' AND CC.CPC_SCHOOL_YEAR = ( CASE    WHEN TRUNC(SYSDATE) < TO_DATE('09/01' ||EXTRACT(YEAR FROM SYSDATE),'MM/DD/YYYY')  THEN EXTRACT(YEAR FROM SYSDATE)  ELSE EXTRACT(YEAR FROM SYSDATE)+ 1 END  ) )) LEFT JOIN (SELECT PCOM.PCOM_ID FUP_PCOM_ID, SD.SD_ELAR_PERSON_ID FUP_ELAR_PERSON_ID, FUP.FUP_UPLOAD_ID FROM TC0230PCOM_PROGRAM_COMPLETOR PCOM, EM002SD_STAFF_DIR SD, CP071FUP_FILE_UPLOAD FUP, V_220_PROGRAM_ORG_LINK POL WHERE PCOM.PCOM_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID AND FUP.FUP_CAND_MEPID = SD.SD_MEPID_SR01 AND POL.V_ORG_ID = FUP.FUP_SPONSORING_ORG_ID AND POL.V_PROG_PRG_ID = FUP.FUP_PRG_ID AND PCOM.PCOM_PROG_ID =  POL.V_PROG_ID ) FUP ON COM.PCOM_ID =FUP.FUP_PCOM_ID AND COM.PCOM_ELAR_PERSON_ID = FUP.FUP_ELAR_PERSON_ID INNER JOIN TC0221PERC_PERSON_ELAR PE ON COM.PCOM_ELAR_PERSON_ID = PE.PERC_ELAR_PERSON_ID INNER JOIN V_220_PROGRAM_ORG_LINK PL ON COM.PCOM_PROG_ID = PL.V_PROG_ID LEFT OUTER JOIN EM002SD_STAFF_DIR SD ON COM.PCOM_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID INNER JOIN V_DM_PERSON PER ON PE.PERC_DA_PERSON_ID  = PER.PER_PERSON_ID WHERE SD.SD_ACTIVE = 'Y' AND COM.PCOM_ELAR_PERSON_ID IS NOT NULL AND COM.PCOM_STATUS_CODE IN ('003', '004') AND V_PROG_CAPS_IND  = 'Y' AND V_PROG_PRG_ID  = :programId AND V_ORG_CODE   = :orgCode ORDER BY 2 
candidatesByMEPID=SELECT PCOM_ID AS V_PCOM_ID, PCOM_ELAR_PERSON_ID AS V_PCOM_ELAR_PERSON_ID, PERC_DA_PERSON_ID AS V_DA_PERSON_ID, SD_MEPID_SR01 AS V_MEPID, PCOM_PROG_ID AS V_PCOM_PROG_ID, V_PROGRAM_DESC, PCOM_STATUS_CODE AS V_PCOM_STATUS_CODE, PST_STATUS_NAME AS V_PST_STATUS_NAME, INITCAP (PER_FIRST_NAME) || ' ' || INITCAP (PER_LAST_NAME) AS PERNAME , NVL(CC.CPC_CYCLE_ID, 0), NVL(FUP.FUP_UPLOAD_ID, 0) AS "UPLOAD_CYCLE_ID" FROM TC0230PCOM_PROGRAM_COMPLETOR COM LEFT JOIN CP050CPC_CAP_CYCLE CC ON CC.CPC_PCOM_ID = COM.PCOM_ID AND (CC.CPC_CST_STATUS_CODE IS NULL OR (CC.CPC_CST_STATUS_CODE   =1 AND CC.CPC_READY_TO_TEACH    ='Y'  AND CC.CPC_SCHOOL_YEAR = ( CASE    WHEN TRUNC(SYSDATE) < TO_DATE('09/01' ||EXTRACT(YEAR FROM SYSDATE),'MM/DD/YYYY')  THEN EXTRACT(YEAR FROM SYSDATE)  ELSE EXTRACT(YEAR FROM SYSDATE)+ 1 END  )) ) LEFT JOIN (SELECT PCOM.PCOM_ID FUP_PCOM_ID, SD.SD_ELAR_PERSON_ID FUP_ELAR_PERSON_ID,  FUP.FUP_UPLOAD_ID  FROM TC0230PCOM_PROGRAM_COMPLETOR PCOM, EM002SD_STAFF_DIR SD,  CP071FUP_FILE_UPLOAD FUP, V_220_PROGRAM_ORG_LINK POL  WHERE PCOM.PCOM_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID  AND FUP.FUP_CAND_MEPID = SD.SD_MEPID_SR01  AND POL.V_ORG_ID = FUP.FUP_SPONSORING_ORG_ID  AND POL.V_PROG_PRG_ID  = FUP.FUP_PRG_ID  AND PCOM.PCOM_PROG_ID =  POL.V_PROG_ID ) FUP ON COM.PCOM_ID  =FUP.FUP_PCOM_ID AND COM.PCOM_ELAR_PERSON_ID = FUP.FUP_ELAR_PERSON_ID INNER JOIN TC0450PST_PCOM_STATUS_TYP ST ON COM.PCOM_STATUS_CODE = ST.PST_STATUS_CODE INNER JOIN TC0221PERC_PERSON_ELAR PE ON COM.PCOM_ELAR_PERSON_ID = PE.PERC_ELAR_PERSON_ID INNER JOIN V_220_PROGRAM_ORG_LINK PL ON COM.PCOM_PROG_ID = PL.V_PROG_ID LEFT OUTER JOIN EM002SD_STAFF_DIR SD ON COM.PCOM_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID INNER JOIN V_DM_PERSON PER ON PE.PERC_DA_PERSON_ID = PER.PER_PERSON_ID WHERE SD.SD_ACTIVE = 'Y' AND COM.PCOM_ELAR_PERSON_ID IS NOT NULL AND COM.PCOM_STATUS_CODE IN ('003', '004') AND V_PROG_CAPS_IND = 'Y' AND V_ORG_CODE = :orgCode AND SD.SD_MEPID_SR01 = :mepid ORDER BY 2
practitionerByMEPID=SELECT DISTINCT SRE_MEPID, DISTRICT.ORG_NAME AS DISTRICT_NAME, DISTRICT.ORG_ID AS DISTRICT_ORG_ID, SCHOOL.ORG_NAME AS SCHOOL_ORG_NAME, SCHOOL.ORG_ID AS SCHOOL_ORG_ID, INITCAP (SRE_FIRST_NAME) AS FIRST_NAME, INITCAP (SRE_LAST_NAME) AS LAST_NAME FROM V_EM228SRE_STAFF_ROSTER_ELAR R JOIN DM0005ORG_ORGANIZATION DISTRICT ON R.SRE_ORG_CODE=DISTRICT.ORG_CODE JOIN DM0005ORG_ORGANIZATION SCHOOL ON DISTRICT.ORG_ID =NVL(SCHOOL.ORG_PARENT_ORG_ID,SCHOOL.ORG_ID) WHERE SRE_ACTIVE ='Y' AND SRE_EXIT_REASON_CODE = '00' AND SRE_MEPID = :mepid AND SCHOOL.ORG_ID = :schoolOrgId AND (DISTRICT.ORG_ID=:districtOrgId OR 1 =NVL(:districtOrgId,1))
practitionerByDistrict=SELECT DISTINCT R.SR_DIST_CODE_SR10 AS DISTRICT_ORG_CODE, SR_ORG_NAME AS DISTRICT_NAME, SR_ORG_ID AS DISTRICT_ORG_ID, INITCAP (SD_FIRST_NAME_SR04) AS FIRST_NAME, INITCAP (SD_LAST_NAME_SR06) AS LAST_NAME, SD_MEPID_SR01 AS MEPID, ORG.ORG_ID AS SCHOOL_ORG_ID, ORG.ORG_CODE AS SCHOOL_ORG_CODE, ORG.ORG_NAME AS SCHOOL_ORG_NAME, ORG.ORGT_ORG_TYP_CODE AS SCHOOL_ORG_TYPE, WA.WA_JCT_JOB_CLASSIF_CD_WA07 AS ASSIGNMENT_TYPE, WA.WA_ORG_CODE AS WA_DISTRICT_CODE, WA.WA_ORG_NAME AS WA_DISTRICT_NAME FROM EM002SD_STAFF_DIR D, EM025SR_STAFF_ROSTER R, EM029WA_WORK_ASSIGNMENT WA, DCO010ORG_ORGANIZATION DCO, DM0005ORG_ORGANIZATION ORG WHERE D.SD_MEPID_SR01 = R.SR_SD_MEPID_SR01 AND R.SR_ID = WA.WA_SR_ID AND R.SR_PRD_ID = (SELECT MAX (SR_PRD_ID) FROM EM025SR_STAFF_ROSTER B WHERE R.SR_SD_MEPID_SR01 = B.SR_SD_MEPID_SR01) AND R.SR_ERT_EXIT_REASON_CODE_SR12 = 00 AND D.SD_ACTIVE = 'Y' AND DCO.ORG_ORG_ID = WA.WA_ORG_ID_WA06 AND DCO.ORG_ORG_CODE = ORG.ORG_CODE /*AND WA.WA_JCT_JOB_CLASSIF_CD_WA07 IN ('2305', '2306', '2307', '2308', '2310', '2325')*/ AND R.SR_DIST_CODE_SR10 = :districtCode AND SD_MEPID_SR01 = :mepid
capCycles=SELECT CC.CPC_CYCLE_ID CYCLE_ID, PER.PER_NAME TC_NAME, V_PROGRAM_DESC PROGRAM_NAME, PS_NAME, SP_NAME, CC.CPC_START_DATE CYCLESTARTDATE, PRACTICUM_SCHOOL PRACTICUMSCHOOL, NVL (ST.CST_STATUS_DESC, 'Open') CYCLESTATUS FROM CP050CPC_CAP_CYCLE CC, CP006CST_CYCLE_STATREASON_TYP ST, V_230_PROGRAM_COMPLETOR PCOM, TC0221PERC_PERSON_ELAR PERC, V_220_PROGRAM_ORG_LINK POL, (SELECT PER.PER_PERSON_ID, (INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER.PER_LAST_NAME)) PER_NAME, PER.PER_FIRST_NAME, PER.PER_MIDDLE_NAME, PER.PER_LAST_NAME FROM V_DM_PERSON PER) PER, (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID, INITCAP (PS_PER.PER_FIRST_NAME) PS_FIRST_NAME, INITCAP (PS_PER.PER_MIDDLE_NAME) PS_MIDDLE_NAME, INITCAP (PS_PER.PER_LAST_NAME) PS_LAST_NAME, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) PS_NAME FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN, V_DM_PERSON PS_PER WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723) PS, ( SELECT SP_CYCLE_ID, LISTAGG (SP_PERSON_ID, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID) SP_PERSON_ID, LISTAGG (SP_NAME, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID, SP_NAME) SP_NAME, LISTAGG (PRACTICUM_SCHOOL, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID, PRACTICUM_SCHOOL) PRACTICUM_SCHOOL FROM (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PER_PERSON_ID SP_PERSON_ID, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) SP_NAME, PARENTORG.ORG_NAME || ': ' || ORG.ORG_NAME PRACTICUM_SCHOOL FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_PERSON PS_PER, V_DM_ORGANIZATION ORG, V_DM_ORGANIZATION PARENTORG WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND SP_ASSGN.CPA_PRACTICUM_ORG_ID = ORG.ORG_ID AND PARENTORG.ORG_ID = NVL (ORG.ORG_PARENT_ORG_ID, ORG.ORG_ID) AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 UNION SELECT OOS_SP.SOA_CYCLE_ID SP_CYCLE_ID, NULL AS SP_PERSON_ID, INITCAP (OOS_SP.SOA_PER_FIRST_NAME) || ' ' || INITCAP (OOS_SP.SOA_PER_LAST_NAME) SP_NAME, OOS_SP.SOA_PRACTICUM_DISTRICT || ': ' || OOS_SP.SOA_PRACTICUM_SCHOOL_NAME PRACTICUM_SCHOOL FROM CP052SOA_SP_OUTOFSTATE_ASGNMT OOS_SP WHERE OOS_SP.SOA_EXP_DATE IS NULL) GROUP BY SP_CYCLE_ID) SP WHERE CC.CPC_PCOM_ID = PCOM.V_PCOM_ID AND CC.CPC_CYCLE_ID = PS.PS_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = SP.SP_CYCLE_ID(+) AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID AND CC.CPC_CST_STATUS_CODE = ST.CST_STATUS_CODE(+) AND POL.V_ORG_CODE = :orgCode AND ( NVL (CC.CPC_SCHOOL_YEAR, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (CC.CPC_SCHOOL_YEAR, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear) AND ( NVL (CC.CPC_CST_STATUS_CODE, 'Open') = :statusCode OR '0' = :allStatus) ORDER BY 1
findCandidate=SELECT PCOM_ID, INITCAP (PER_FIRST_NAME) PCOM_FIRST_NAME, INITCAP (PER_LAST_NAME) PCOM_LAST_NAME, PCOM_PROG_ID, PCOM_ELAR_PERSON_ID, STAFFDIR.SD_MEPID_SR01, PROG.V_PROG_ID, PROG.V_PROGRAM_DESC, V_ORG_ID, V_ORG_CODE, V_ORG_NAME FROM TC0230PCOM_PROGRAM_COMPLETOR PCOM JOIN EM002SD_STAFF_DIR STAFFDIR ON STAFFDIR.SD_ELAR_PERSON_ID = PCOM.PCOM_ELAR_PERSON_ID JOIN TC0221PERC_PERSON_ELAR PE ON PCOM.PCOM_ELAR_PERSON_ID = PE.PERC_ELAR_PERSON_ID JOIN V_DM_PERSON PER ON PE.PERC_DA_PERSON_ID = PER.PER_PERSON_ID JOIN V_220_PROGRAM_ORG_LINK PROG ON PROG.V_PROG_ID = PCOM.PCOM_PROG_ID AND STAFFDIR.SD_ACTIVE = 'Y' AND PCOM_ID = :pcomId
findPractitioner=SELECT INITCAP (PER.PER_FIRST_NAME) FIRST_NAME, INITCAP (PER.PER_LAST_NAME) LAST_NAME, MUK.MUK_MEPID MEPID, DISTRICT.ORG_NAME DISTRICT_ORG_NAME, DISTRICT.ORG_ID DISTRICT_ORG_ID, DISTRICT.ORGT_ORG_TYP_CODE, SCH.ORG_ID SCHOOL_ORG_ID, SCH.ORG_NAME SCHOOL_ORG_NAME FROM DM0002PER_PERSON PER, DM0165MUK_MEPID_USER_LINK MUK, DM0005ORG_ORGANIZATION SCH, DM0005ORG_ORGANIZATION DISTRICT WHERE     PER.USER_ID = MUK.MUK_USER_ID AND NVL (SCH.ORG_PARENT_ORG_ID, SCH.ORG_ID) = DISTRICT.ORG_ID AND SCH.ORG_ID = :orgId AND PER.PER_PERSON_ID = :personId
observation.announced01=SELECT '01' OBS_OBSERVATION_TYPE_CODE, 1 AS OBS_OBSERVATION_NUMBER, OBS.OBS_BOTH_PSSP_COMPLETED, OBS.OBS_COMPLETED, OBS.OBS_OBSERVATION_DATE, OBS.OBS_START_TIME, OBS.OBS_END_TIME, '' DUMMY_COLUMN, OBS.OBS_OBS_TOPIC_OBJECTIVE, RET_ELEMENT_ALT_LONG_DESC, (CASE WHEN OFE_ELEMENT_CODE IS NOT NULL THEN 1 ELSE 0 END) FOCUS_ELEMENT, RET_ELEMENT_CODE, OBE.OBE_PS_EVIDENCE, OBE.OBE_SP_EVIDENCE, OBE.OBE_CAL_EVIDENCE, OBS_SP_REFINE_FEEDBACK, OBS_PS_REFINE_FEEDBACK, OBS_REFINE_CALIBRATED_FEEDBACK, OBS_SP_REIN_FEEDBACK, OBS_PS_REIN_FEEDBACK, OBS_REIN_CALIBRATED_FEEDBACK ,OBS_OBSERVATION_ID,OBS_CYCLE_ID,OBE_OBSERVATION_EVIDENCE_ID,'Announced' OBT_OBSERVATION_TYPE_DESC FROM (SELECT * FROM  CP052OBS_OBSERVATION  WHERE OBS_CYCLE_ID=:cycleId AND OBS_OBSERVATION_NUMBER=1 AND OBS_OBSERVATION_TYPE_CODE='01' AND obs_exp_date is null)  OBS JOIN CP053OBE_OBSERVATION_EVIDENCE OBE ON OBE_OBSERVATION_ID = OBS_OBSERVATION_ID JOIN CP002OBT_OSBSERVATION_TYP ON OBS_OBSERVATION_TYPE_CODE = OBT_OBSERVATION_TYPE_CODE RIGHT JOIN CP004RET_RUBRIC_ELEMENT_TYP ON OBE_OBS_ELEMENT_CODE = RET_ELEMENT_CODE LEFT JOIN CP0054OFE_OBS_FOCUS_ELEMENT ON (RET_ELEMENT_CODE = OFE_ELEMENT_CODE AND OFE_OBSERVATION_TYPE_CODE = '01'  AND OFE_OBSERVATION_NUMBER = 1) AND obe_exp_date is null order by ret_element_code
observation.announced02=SELECT '01' OBS_OBSERVATION_TYPE_CODE, 2 AS OBS_OBSERVATION_NUMBER, OBS.OBS_BOTH_PSSP_COMPLETED, OBS.OBS_COMPLETED, OBS.OBS_OBSERVATION_DATE, OBS.OBS_START_TIME, OBS.OBS_END_TIME, '' DUMMY_COLUMN, OBS.OBS_OBS_TOPIC_OBJECTIVE, RET_ELEMENT_ALT_LONG_DESC, (CASE WHEN OFE_ELEMENT_CODE IS NOT NULL THEN 1 ELSE 0 END) FOCUS_ELEMENT, RET_ELEMENT_CODE, OBE.OBE_PS_EVIDENCE, OBE.OBE_SP_EVIDENCE, OBE.OBE_CAL_EVIDENCE, OBS_SP_REFINE_FEEDBACK, OBS_PS_REFINE_FEEDBACK, OBS_REFINE_CALIBRATED_FEEDBACK, OBS_SP_REIN_FEEDBACK, OBS_PS_REIN_FEEDBACK, OBS_REIN_CALIBRATED_FEEDBACK ,OBS_OBSERVATION_ID,OBS_CYCLE_ID,OBE_OBSERVATION_EVIDENCE_ID,'Announced' OBT_OBSERVATION_TYPE_DESC FROM (SELECT * FROM  CP052OBS_OBSERVATION  WHERE OBS_CYCLE_ID=:cycleId AND OBS_OBSERVATION_NUMBER=2 AND OBS_OBSERVATION_TYPE_CODE='01' AND obs_exp_date is null)  OBS JOIN CP053OBE_OBSERVATION_EVIDENCE OBE ON OBE_OBSERVATION_ID = OBS_OBSERVATION_ID JOIN CP002OBT_OSBSERVATION_TYP ON OBS_OBSERVATION_TYPE_CODE = OBT_OBSERVATION_TYPE_CODE RIGHT JOIN CP004RET_RUBRIC_ELEMENT_TYP ON OBE_OBS_ELEMENT_CODE = RET_ELEMENT_CODE LEFT JOIN CP0054OFE_OBS_FOCUS_ELEMENT ON (RET_ELEMENT_CODE = OFE_ELEMENT_CODE AND OFE_OBSERVATION_TYPE_CODE = '01'  AND OFE_OBSERVATION_NUMBER = 2) AND obe_exp_date is null  order by ret_element_code
observation.unannounced01=SELECT '02' OBS_OBSERVATION_TYPE_CODE, 1 AS OBS_OBSERVATION_NUMBER, OBS.OBS_BOTH_PSSP_COMPLETED, OBS.OBS_COMPLETED, OBS.OBS_OBSERVATION_DATE, OBS.OBS_START_TIME, OBS.OBS_END_TIME, '' DUMMY_COLUMN, OBS.OBS_OBS_TOPIC_OBJECTIVE, RET_ELEMENT_ALT_LONG_DESC, (CASE WHEN OFE_ELEMENT_CODE IS NOT NULL THEN 1 ELSE 0 END) FOCUS_ELEMENT, RET_ELEMENT_CODE, OBE.OBE_PS_EVIDENCE, OBE.OBE_SP_EVIDENCE, OBE.OBE_CAL_EVIDENCE, OBS_SP_REFINE_FEEDBACK, OBS_PS_REFINE_FEEDBACK, OBS_REFINE_CALIBRATED_FEEDBACK, OBS_SP_REIN_FEEDBACK, OBS_PS_REIN_FEEDBACK, OBS_REIN_CALIBRATED_FEEDBACK ,OBS_OBSERVATION_ID,OBS_CYCLE_ID,OBE_OBSERVATION_EVIDENCE_ID,'Unannounced' OBT_OBSERVATION_TYPE_DESC FROM (SELECT * FROM  CP052OBS_OBSERVATION  WHERE OBS_CYCLE_ID=:cycleId AND OBS_OBSERVATION_NUMBER=1 AND OBS_OBSERVATION_TYPE_CODE='02' AND obs_exp_date is null)  OBS JOIN CP053OBE_OBSERVATION_EVIDENCE OBE ON OBE_OBSERVATION_ID = OBS_OBSERVATION_ID JOIN CP002OBT_OSBSERVATION_TYP ON OBS_OBSERVATION_TYPE_CODE = OBT_OBSERVATION_TYPE_CODE RIGHT JOIN CP004RET_RUBRIC_ELEMENT_TYP ON OBE_OBS_ELEMENT_CODE = RET_ELEMENT_CODE LEFT JOIN CP0054OFE_OBS_FOCUS_ELEMENT ON (RET_ELEMENT_CODE = OFE_ELEMENT_CODE AND OFE_OBSERVATION_TYPE_CODE = '02'  AND OFE_OBSERVATION_NUMBER = 1) AND obe_exp_date is null  order by ret_element_code
observation.unannounced02=SELECT '02' OBS_OBSERVATION_TYPE_CODE, 2 AS OBS_OBSERVATION_NUMBER, OBS.OBS_BOTH_PSSP_COMPLETED, OBS.OBS_COMPLETED, OBS.OBS_OBSERVATION_DATE, OBS.OBS_START_TIME, OBS.OBS_END_TIME, '' DUMMY_COLUMN, OBS.OBS_OBS_TOPIC_OBJECTIVE, RET_ELEMENT_ALT_LONG_DESC, (CASE WHEN OFE_ELEMENT_CODE IS NOT NULL THEN 1 ELSE 0 END) FOCUS_ELEMENT, RET_ELEMENT_CODE, OBE.OBE_PS_EVIDENCE, OBE.OBE_SP_EVIDENCE, OBE.OBE_CAL_EVIDENCE, OBS_SP_REFINE_FEEDBACK, OBS_PS_REFINE_FEEDBACK, OBS_REFINE_CALIBRATED_FEEDBACK, OBS_SP_REIN_FEEDBACK, OBS_PS_REIN_FEEDBACK, OBS_REIN_CALIBRATED_FEEDBACK ,OBS_OBSERVATION_ID,OBS_CYCLE_ID,OBE_OBSERVATION_EVIDENCE_ID,'Unannounced' OBT_OBSERVATION_TYPE_DESC FROM (SELECT * FROM  CP052OBS_OBSERVATION  WHERE OBS_CYCLE_ID=:cycleId AND OBS_OBSERVATION_NUMBER=2 AND OBS_OBSERVATION_TYPE_CODE='02' AND obs_exp_date is null)  OBS JOIN CP053OBE_OBSERVATION_EVIDENCE OBE ON OBE_OBSERVATION_ID = OBS_OBSERVATION_ID JOIN CP002OBT_OSBSERVATION_TYP ON OBS_OBSERVATION_TYPE_CODE = OBT_OBSERVATION_TYPE_CODE RIGHT JOIN CP004RET_RUBRIC_ELEMENT_TYP ON OBE_OBS_ELEMENT_CODE = RET_ELEMENT_CODE LEFT JOIN CP0054OFE_OBS_FOCUS_ELEMENT ON (RET_ELEMENT_CODE = OFE_ELEMENT_CODE AND OFE_OBSERVATION_TYPE_CODE = '02'  AND OFE_OBSERVATION_NUMBER = 2) AND obe_exp_date is null  order by ret_element_code
psCapCycles=SELECT CC.CPC_CYCLE_ID, PER.PER_PERSON_ID TC_PERSON_ID, INITCAP (PER.PER_FIRST_NAME) TC_FIRST_NAME, INITCAP (PER.PER_MIDDLE_NAME) TC_MIDDLE_NAME, INITCAP (PER.PER_LAST_NAME) TC_LAST_NAME, V_PROGRAM_DESC PROGRAM_NAME, PS_PERSON_ID, PS_FIRST_NAME, PS_MIDDLE_NAME, PS_LAST_NAME, SP_PERSON_ID, SP.SP_NAME, CC.CPC_START_DATE CYCLESTARTDATE, NVL (SELF_ASMT, 'N') SELF_ASMT, NVL (ANNOUNCED_OBS_1, 'N') ANNOUNCED_OBS_1, NVL (G.GOP, 'N') GOP, NVL (UNANNOUNCED_OBS_1, 'N') UNANNOUNCED_OBS_1, NVL (ANNOUNCED_OBS_2, 'N') ANNOUNCED_OBS_2, NVL (FORM_ASMT, 'N') FORM_ASMT, NVL (UNANNOUNCED_OBS_2, 'N') UNANNOUNCED_OBS_2, NVL (SUMM_ASMT, 'N') SUMM_ASMT, GREATEST (CPC_UPDATE_DATE, CPC_CREATE_DATE, NVL (GOP_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY')), NVL (AST_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY')), NVL (OBS_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY'))) LATEST_ACTIVITY_DATE, PER.PER_NAME TC_NAME, PS_NAME, CC.CPC_SCHOOL_YEAR, NVL (ST.CST_STATUS_DESC, 'Open') CYCLE_STATUS, SP.PRACTICUM_SCHOOL FROM CP050CPC_CAP_CYCLE CC, CP006CST_CYCLE_STATREASON_TYP ST, V_230_PROGRAM_COMPLETOR PCOM, TC0221PERC_PERSON_ELAR PERC, V_220_PROGRAM_ORG_LINK POL, (SELECT PER.PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PER.PER_LAST_NAME)) PER_NAME, PER.PER_FIRST_NAME, PER.PER_MIDDLE_NAME, PER.PER_LAST_NAME FROM V_DM_PERSON PER) PER, (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID, INITCAP (PS_PER.PER_FIRST_NAME) PS_FIRST_NAME, INITCAP (PS_PER.PER_MIDDLE_NAME) PS_MIDDLE_NAME, INITCAP (PS_PER.PER_LAST_NAME) PS_LAST_NAME, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) PS_NAME FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN, V_DM_PERSON PS_PER WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723) PS, ( SELECT SP_CYCLE_ID, LISTAGG (SP_PERSON_ID, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID) SP_PERSON_ID, LISTAGG (SP_NAME, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID, SP_NAME) SP_NAME, LISTAGG (PRACTICUM_SCHOOL, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID, PRACTICUM_SCHOOL) PRACTICUM_SCHOOL FROM (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PER_PERSON_ID SP_PERSON_ID, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) SP_NAME, PARENTORG.ORG_NAME || ': ' || ORG.ORG_NAME PRACTICUM_SCHOOL FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_PERSON PS_PER, V_DM_ORGANIZATION ORG, V_DM_ORGANIZATION PARENTORG WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND SP_ASSGN.CPA_PRACTICUM_ORG_ID = ORG.ORG_ID AND PARENTORG.ORG_ID = NVL(ORG.ORG_PARENT_ORG_ID, ORG.ORG_ID) AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 UNION SELECT OOS_SP.SOA_CYCLE_ID SP_CYCLE_ID, NULL AS SP_PERSON_ID, INITCAP (OOS_SP.SOA_PER_FIRST_NAME) || ' ' || INITCAP (OOS_SP.SOA_PER_LAST_NAME) SP_NAME, OOS_SP.SOA_PRACTICUM_DISTRICT || ': ' || OOS_SP.SOA_PRACTICUM_SCHOOL_NAME PRACTICUM_SCHOOL FROM CP052SOA_SP_OUTOFSTATE_ASGNMT OOS_SP WHERE OOS_SP.SOA_EXP_DATE IS NULL) GROUP BY SP_CYCLE_ID) SP, (SELECT GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N') GOP, MAX(GOP_EFF_DATE) GOP_EFF_DATE FROM CP060GOP_GOAL_PLAN WHERE GOP_EXP_DATE IS NULL AND GOP_GOAL_PLAN_TYPE_CODE = '2' GROUP BY GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N') ) G, ( SELECT AST_CYCLE_ID, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '1' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SELF_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'Y' AND AST_SP_APPROVED = 'N') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'N' AND AST_SP_APPROVED = 'Y') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) FORM_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'Y' AND AST_SP_APPROVED = 'N') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'N' AND AST_SP_APPROVED = 'Y') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SUMM_ASMT, MAX (AST_EFF_DATE) AST_EFF_DATE FROM CP056AST_ASSESSMENT WHERE AST_EXP_DATE IS NULL GROUP BY AST_CYCLE_ID) AST, ( SELECT OBS_CYCLE_ID, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) ANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) ANNOUNCED_OBS_2, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) UNANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) UNANNOUNCED_OBS_2, MAX (OBS_EFF_DATE) OBS_EFF_DATE FROM CP052OBS_OBSERVATION WHERE OBS_EXP_DATE IS NULL GROUP BY OBS_CYCLE_ID) OBS WHERE CC.CPC_PCOM_ID = PCOM.V_PCOM_ID AND CC.CPC_CYCLE_ID = PS.PS_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = SP.SP_CYCLE_ID(+) AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID AND CC.CPC_CYCLE_ID = G.GOP_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = OBS.OBS_CYCLE_ID(+) AND CC.CPC_CST_STATUS_CODE = ST.CST_STATUS_CODE(+) AND POL.V_ORG_CODE = :orgCode AND PS.PS_PERSON_ID = (CASE WHEN :personId = 1 THEN PS.PS_PERSON_ID ELSE :personId END) AND ( NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear) AND ( NVL (CC.CPC_CST_STATUS_CODE, 'Open') = :statusCode OR '0' = :allStatus)
spCapCycles=SELECT CC.CPC_CYCLE_ID, PER.PER_PERSON_ID TC_PERSON_ID, INITCAP (PER.PER_FIRST_NAME) TC_FIRST_NAME, INITCAP (PER.PER_MIDDLE_NAME) TC_MIDDLE_NAME, INITCAP (PER.PER_LAST_NAME) TC_LAST_NAME, V_PROGRAM_DESC PROGRAM_NAME, PS_PERSON_ID, PS_FIRST_NAME, PS_MIDDLE_NAME, PS_LAST_NAME, SP_PERSON_ID, SP.SP_NAME, CC.CPC_START_DATE CYCLESTARTDATE, NVL (SELF_ASMT, 'N') SELF_ASMT, NVL (ANNOUNCED_OBS_1, 'N') ANNOUNCED_OBS_1, NVL (G.GOP, 'N') GOP, NVL (UNANNOUNCED_OBS_1, 'N') UNANNOUNCED_OBS_1, NVL (ANNOUNCED_OBS_2, 'N') ANNOUNCED_OBS_2, NVL (FORM_ASMT, 'N') FORM_ASMT, NVL (UNANNOUNCED_OBS_2, 'N') UNANNOUNCED_OBS_2, NVL (SUMM_ASMT, 'N') SUMM_ASMT, PER.PER_NAME TC_NAME, PS_NAME, CC.CPC_SCHOOL_YEAR, NVL (ST.CST_STATUS_DESC, 'Open') CYCLE_STATUS FROM CP050CPC_CAP_CYCLE CC, CP006CST_CYCLE_STATREASON_TYP ST, V_230_PROGRAM_COMPLETOR PCOM, TC0221PERC_PERSON_ELAR PERC, V_220_PROGRAM_ORG_LINK POL, (SELECT PER.PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PER.PER_LAST_NAME)) PER_NAME, PER.PER_FIRST_NAME, PER.PER_MIDDLE_NAME, PER.PER_LAST_NAME FROM V_DM_PERSON PER) PER, (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID, PS_PER.PER_FIRST_NAME PS_FIRST_NAME, PS_PER.PER_MIDDLE_NAME PS_MIDDLE_NAME, PS_PER.PER_LAST_NAME PS_LAST_NAME, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) PS_NAME FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN, V_DM_PERSON PS_PER WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723) PS, (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PER_PERSON_ID SP_PERSON_ID, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) SP_NAME FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_PERSON PS_PER WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 UNION SELECT OOS_SP.SOA_CYCLE_ID SP_CYCLE_ID, NULL AS SP_PERSON_ID, INITCAP (OOS_SP.SOA_PER_FIRST_NAME) || ' ' || INITCAP (OOS_SP.SOA_PER_LAST_NAME) SP_NAME FROM CP052SOA_SP_OUTOFSTATE_ASGNMT OOS_SP WHERE SOA_EXP_DATE IS NULL) SP, (SELECT GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N') GOP, MAX(GOP_EFF_DATE) GOP_EFF_DATE FROM CP060GOP_GOAL_PLAN WHERE GOP_EXP_DATE IS NULL AND GOP_GOAL_PLAN_TYPE_CODE = '2' GROUP BY GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N')) G, ( SELECT AST_CYCLE_ID, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '1' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SELF_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'Y' AND AST_SP_APPROVED = 'N') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'N' AND AST_SP_APPROVED = 'Y') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) FORM_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'Y' AND AST_SP_APPROVED = 'N') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'N' AND AST_SP_APPROVED = 'Y') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SUMM_ASMT, MAX (AST_EFF_DATE) AST_EFF_DATE FROM CP056AST_ASSESSMENT WHERE AST_EXP_DATE IS NULL GROUP BY AST_CYCLE_ID) AST, ( SELECT OBS_CYCLE_ID, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) ANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) ANNOUNCED_OBS_2, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) UNANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) UNANNOUNCED_OBS_2, MAX (OBS_EFF_DATE) OBS_EFF_DATE FROM CP052OBS_OBSERVATION WHERE OBS_EXP_DATE IS NULL GROUP BY OBS_CYCLE_ID) OBS WHERE CC.CPC_PCOM_ID = PCOM.V_PCOM_ID AND CC.CPC_CYCLE_ID = PS.PS_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = SP.SP_CYCLE_ID(+) AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID AND CC.CPC_CYCLE_ID = G.GOP_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = OBS.OBS_CYCLE_ID(+) AND CC.CPC_CST_STATUS_CODE = ST.CST_STATUS_CODE(+) AND POL.V_ORG_CODE = :orgCode AND SP.SP_PERSON_ID = :personId AND ( NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear) AND ( NVL (CC.CPC_CST_STATUS_CODE, 'Open') = :statusCode OR '0' = :allStatus)
tcCapCycles=SELECT CC.CPC_CYCLE_ID, PER.PER_PERSON_ID TC_PERSON_ID, INITCAP (PER.PER_FIRST_NAME) TC_FIRST_NAME, INITCAP (PER.PER_MIDDLE_NAME) TC_MIDDLE_NAME, INITCAP (PER.PER_LAST_NAME) TC_LAST_NAME, V_PROGRAM_DESC PROGRAM_NAME, PS_PERSON_ID, PS_FIRST_NAME, PS_MIDDLE_NAME, PS_LAST_NAME, SP_PERSON_ID, SP.SP_NAME, CC.CPC_START_DATE CYCLESTARTDATE, NVL (SELF_ASMT, 'N') SELF_ASMT, NVL (ANNOUNCED_OBS_1, 'N') ANNOUNCED_OBS_1, NVL (G.GOP, 'N') GOP, NVL (UNANNOUNCED_OBS_1, 'N') UNANNOUNCED_OBS_1, NVL (ANNOUNCED_OBS_2, 'N') ANNOUNCED_OBS_2, NVL (FORM_ASMT, 'N') FORM_ASMT, NVL (UNANNOUNCED_OBS_2, 'N') UNANNOUNCED_OBS_2, NVL (SUMM_ASMT, 'N') SUMM_ASMT, PER.PER_NAME TC_NAME, PS_NAME, CC.CPC_SCHOOL_YEAR, NVL (ST.CST_STATUS_DESC, 'Open') CYCLE_STATUS FROM CP050CPC_CAP_CYCLE CC, CP006CST_CYCLE_STATREASON_TYP ST, V_230_PROGRAM_COMPLETOR PCOM, TC0221PERC_PERSON_ELAR PERC, V_220_PROGRAM_ORG_LINK POL, (SELECT PER.PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PER.PER_LAST_NAME)) PER_NAME, PER.PER_FIRST_NAME, PER.PER_MIDDLE_NAME, PER.PER_LAST_NAME FROM V_DM_PERSON PER) PER, (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID, PS_PER.PER_FIRST_NAME PS_FIRST_NAME, PS_PER.PER_MIDDLE_NAME PS_MIDDLE_NAME, PS_PER.PER_LAST_NAME PS_LAST_NAME, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) PS_NAME FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN, V_DM_PERSON PS_PER WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723) PS, ( SELECT SP_CYCLE_ID, LISTAGG (SP_PERSON_ID, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID) SP_PERSON_ID, LISTAGG (SP_NAME, '; ') WITHIN GROUP (ORDER BY SP_PERSON_ID, SP_NAME) SP_NAME FROM (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PER_PERSON_ID SP_PERSON_ID, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_MIDDLE_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) SP_NAME, PARENTORG.ORG_NAME || ': ' || ORG.ORG_NAME PRACTICUM_SCHOOL FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_PERSON PS_PER, V_DM_ORGANIZATION ORG, V_DM_ORGANIZATION PARENTORG WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND SP_ASSGN.CPA_PRACTICUM_ORG_ID = ORG.ORG_ID AND PARENTORG.ORG_ID = NVL(ORG.ORG_PARENT_ORG_ID, ORG.ORG_ID) AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 UNION SELECT OOS_SP.SOA_CYCLE_ID SP_CYCLE_ID, NULL AS SP_PERSON_ID, INITCAP (OOS_SP.SOA_PER_FIRST_NAME) || ' ' || INITCAP (OOS_SP.SOA_PER_LAST_NAME) SP_NAME, OOS_SP.SOA_PRACTICUM_DISTRICT || ': ' || OOS_SP.SOA_PRACTICUM_SCHOOL_NAME PRACTICUM_SCHOOL FROM CP052SOA_SP_OUTOFSTATE_ASGNMT OOS_SP WHERE OOS_SP.SOA_EXP_DATE IS NULL) GROUP BY SP_CYCLE_ID) SP, (SELECT GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N') GOP, MAX(GOP_EFF_DATE) GOP_EFF_DATE FROM CP060GOP_GOAL_PLAN WHERE GOP_EXP_DATE IS NULL AND GOP_GOAL_PLAN_TYPE_CODE = '2' GROUP BY GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N')) G, ( SELECT AST_CYCLE_ID, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '1' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SELF_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'Y' AND AST_SP_APPROVED = 'N') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'N' AND AST_SP_APPROVED = 'Y') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) FORM_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'Y' AND AST_SP_APPROVED = 'N') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED = 'N' AND AST_PS_APPROVED = 'N' AND AST_SP_APPROVED = 'Y') THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SUMM_ASMT, MAX (AST_EFF_DATE) AST_EFF_DATE FROM CP056AST_ASSESSMENT WHERE AST_EXP_DATE IS NULL GROUP BY AST_CYCLE_ID) AST, ( SELECT OBS_CYCLE_ID, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) ANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) ANNOUNCED_OBS_2, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) UNANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'Y' THEN 'Y' WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_BOTH_PSSP_COMPLETED = 'B' AND OBS_COMPLETED = 'N' THEN 'P' ELSE 'N' END) UNANNOUNCED_OBS_2, MAX (OBS_EFF_DATE) OBS_EFF_DATE FROM CP052OBS_OBSERVATION WHERE OBS_EXP_DATE IS NULL GROUP BY OBS_CYCLE_ID) OBS WHERE CC.CPC_PCOM_ID = PCOM.V_PCOM_ID AND CC.CPC_CYCLE_ID = PS.PS_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = SP.SP_CYCLE_ID(+) AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID AND CC.CPC_CYCLE_ID = G.GOP_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = OBS.OBS_CYCLE_ID(+) AND CC.CPC_CST_STATUS_CODE = ST.CST_STATUS_CODE(+) AND PER.PER_PERSON_ID = :personId AND ( NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear) AND ( NVL (CC.CPC_CST_STATUS_CODE, 'Open') = :statusCode OR '0' = :allStatus)
incompleteForm=SELECT CC.CPC_CYCLE_ID, ( CASE WHEN CPC_PRACTICUM_COURSE_NUMBER IS NOT NULL AND CPC_CREDIT_HOURS IS NOT NULL AND CPC_PRACTICUM_COURSE_TITLE IS NOT NULL AND NVL(CPC_PRACTICUM_GRADE_LEVEL,CGL_CYCLE_ID) IS NOT NULL THEN NULL ELSE 'CAP Form, ' END) || DECODE (NVL (SELF_ASMT, 'N'), 'Y', NULL, 'Self-Assessment, ') || DECODE (NVL (ANNOUNCED_OBS_1, 'N'), 'Y', NULL, 'Announced Observation 1, ') || DECODE (NVL (ANNOUNCED_OBS_2, 'N'), 'Y', NULL, 'Announced Observation 2, ') || DECODE (NVL (UNANNOUNCED_OBS_1, 'N'), 'Y', NULL, 'Unannounced Observation 1, ') || DECODE (NVL (UNANNOUNCED_OBS_2, 'N'), 'Y', NULL, 'Unannounced Observation 2, ') || DECODE (TWM, 1, NULL, 'Three Three-Way Meetings, ') || DECODE (NVL (FORM_ASMT, 'N'), 'Y', NULL, 'Formative Assessment, ') || DECODE (NVL (SUMM_ASMT, 'N'), 'Y', NULL, 'Summative Assessment') INCOMPLETE_WORK FROM CP050CPC_CAP_CYCLE CC, (SELECT DISTINCT CGL_CYCLE_ID FROM CP080CGL_CYCLE_GRADE_LINK WHERE CGL_EXP_DATE IS NULL) gl, (SELECT AST_CYCLE_ID, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '1' AND ( AST_COMPLETED <> 'Y' AND AST_PS_APPROVED = 'Y' AND (NVL (AST_PS_APPROVED, 'N') = NVL (AST_SP_APPROVED, 'N'))) THEN 'P' WHEN AST_ASMT_TYPE_CODE = '1' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SELF_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED <> 'Y' AND AST_PS_APPROVED = 'Y' AND (NVL (AST_PS_APPROVED, 'N') = NVL (AST_SP_APPROVED, 'N'))) THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) FORM_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED <> 'Y' AND AST_PS_APPROVED = 'Y' AND (NVL (AST_PS_APPROVED, 'N') = NVL (AST_SP_APPROVED, 'N'))) THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SUMM_ASMT, MAX (AST_EFF_DATE) AST_EFF_DATE FROM CP056AST_ASSESSMENT WHERE AST_EXP_DATE IS NULL GROUP BY AST_CYCLE_ID ) AST, (SELECT OBS_CYCLE_ID, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) ANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) ANNOUNCED_OBS_2, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) UNANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) UNANNOUNCED_OBS_2, MAX (OBS_EFF_DATE) OBS_EFF_DATE FROM CP052OBS_OBSERVATION WHERE OBS_EXP_DATE IS NULL GROUP BY OBS_CYCLE_ID ) OBS, (SELECT TWM_CYCLE_ID, ( CASE WHEN COUNT(1) >2 THEN 1 ELSE 0 END) TWM FROM CP055TWM_THREE_WAY_MEETING WHERE TWM_MEETING_DATE IS NOT NULL AND TWM_EXP_DATE IS NULL GROUP BY TWM_CYCLE_ID )TWM WHERE CC.CPC_CYCLE_ID = GL.CGL_CYCLE_ID (+) AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = OBS.OBS_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = TWM.TWM_CYCLE_ID (+) AND CC.CPC_CYCLE_ID =:cycleId
capAdminView=SELECT POL.V_ORG_CODE,POL.V_ORG_NAME ORGANIZATION_NAME,NVL(CC.CPC_SCHOOL_YEAR,(CASE WHEN TRUNC(SYSDATE) < TO_DATE('09/01'||EXTRACT(YEAR FROM SYSDATE),'MM/DD/YYYY')         THEN EXTRACT(YEAR FROM SYSDATE)         ELSE EXTRACT(YEAR FROM SYSDATE)+ 1       END))  SCHOOL_YEAR,         COUNT (CPC_CYCLE_ID) TOTAL_CYCLES,         SUM (CASE WHEN CPC_CST_STATUS_CODE IS NULL THEN 1 ELSE 0 END)            OPEN_CYCLES,         SUM (CASE WHEN CPC_CST_STATUS_CODE IS NOT NULL THEN 1 ELSE 0 END)            CLOSED_CYCLES,         COUNT (DISTINCT CPC_PCOM_ID) TOTAL_CANDIDATES,         COUNT (DISTINCT CPA_DA_PERSON_ID) TOTAL_PS,         MAX (            GREATEST (CPC_UPDATE_DATE,                      CPC_CREATE_DATE,                      NVL (GOP_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY')),                      NVL (AST_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY')),                      NVL (OBS_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY'))))            LATEST_ACTIVITY_DATE    FROM CP050CPC_CAP_CYCLE CC,         V_230_PROGRAM_COMPLETOR PCOM,         TC0221PERC_PERSON_ELAR PERC,         V_220_PROGRAM_ORG_LINK POL,         (SELECT PER.PER_PERSON_ID,                 (   INITCAP (PER.PER_FIRST_NAME)                  || ' '                  || INITCAP (PER.PER_MIDDLE_NAME)                  || ' '                  || INITCAP (PER.PER_LAST_NAME))                    PER_NAME,                 PER.PER_FIRST_NAME,                 PER.PER_MIDDLE_NAME,                 PER.PER_LAST_NAME            FROM V_DM_PERSON PER) PER,         (  SELECT GOP_CYCLE_ID, MAX (GOP_EFF_DATE) GOP_EFF_DATE              FROM CP060GOP_GOAL_PLAN             WHERE GOP_EXP_DATE IS NULL          GROUP BY GOP_CYCLE_ID) G,         (  SELECT AST_CYCLE_ID, MAX (AST_EFF_DATE) AST_EFF_DATE              FROM CP056AST_ASSESSMENT             WHERE AST_EXP_DATE IS NULL          GROUP BY AST_CYCLE_ID) AST,         (  SELECT OBS_CYCLE_ID, MAX (OBS_EFF_DATE) OBS_EFF_DATE              FROM CP052OBS_OBSERVATION             WHERE OBS_EXP_DATE IS NULL          GROUP BY OBS_CYCLE_ID) OBS,         CP051CPA_CAP_ASSIGNMENT ASM   WHERE     ASM.CPA_EXP_DATE IS NULL         AND ASM.CPA_DA_ROLE_CODE = '723'         AND CC.CPC_CYCLE_ID = ASM.CPA_CYCLE_ID         AND CC.CPC_PCOM_ID = PCOM.V_PCOM_ID         AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID         AND PERC.PERC_DA_PERSON_ID = PER.PER_PERSON_ID         AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID  AND CC.CPC_CYCLE_ID = G.GOP_CYCLE_ID(+)         AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+)  AND CC.CPC_CYCLE_ID = OBS.OBS_CYCLE_ID(+) GROUP BY POL.V_ORG_CODE, POL.V_ORG_NAME, NVL(CC.CPC_SCHOOL_YEAR,(CASE WHEN TRUNC(SYSDATE) < TO_DATE('09/01'||EXTRACT(YEAR FROM SYSDATE),'MM/DD/YYYY')  THEN EXTRACT(YEAR FROM SYSDATE)  ELSE EXTRACT(YEAR FROM SYSDATE)+ 1  END)) having NVL(CC.CPC_SCHOOL_YEAR,(CASE WHEN TRUNC(SYSDATE) < TO_DATE('09/01'||EXTRACT(YEAR FROM SYSDATE),'MM/DD/YYYY')  THEN EXTRACT(YEAR FROM SYSDATE)  ELSE EXTRACT(YEAR FROM SYSDATE)+ 1  END))=:capYear ORDER BY 2
capCyclesByOrgCode=SELECT CC.CPC_CYCLE_ID, PER.PER_PERSON_ID TC_PERSON_ID, INITCAP (PER.PER_FIRST_NAME) TC_FIRST_NAME, INITCAP (PER.PER_MIDDLE_NAME) TC_MIDDLE_NAME, INITCAP (PER.PER_LAST_NAME) TC_LAST_NAME, V_PROGRAM_DESC PROGRAM_NAME, PS_PERSON_ID, PS_FIRST_NAME, PS_MIDDLE_NAME, PS_LAST_NAME, SP_PERSON_ID, SP.SP_NAME, CC.CPC_START_DATE CYCLESTARTDATE, NVL (SELF_ASMT, 'N') SELF_ASMT, NVL (ANNOUNCED_OBS_1, 'N') ANNOUNCED_OBS_1, NVL (G.GOP, 'N') GOP, NVL (UNANNOUNCED_OBS_1, 'N') UNANNOUNCED_OBS_1, NVL (ANNOUNCED_OBS_2, 'N') ANNOUNCED_OBS_2, NVL (FORM_ASMT, 'N') FORM_ASMT, NVL (UNANNOUNCED_OBS_2, 'N') UNANNOUNCED_OBS_2, NVL (SUMM_ASMT, 'N') SUMM_ASMT, GREATEST (CPC_UPDATE_DATE, CPC_CREATE_DATE, NVL (GOP_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY')), NVL (AST_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY')), NVL (OBS_EFF_DATE, TO_DATE ('01/01/1900', 'MM/DD/YYYY'))) LATEST_ACTIVITY_DATE, PER.PER_NAME TC_NAME, PS_NAME, CC.CPC_SCHOOL_YEAR, NVL (ST.CST_STATUS_DESC, 'Open') CYCLE_STATUS, SP.PRACTICUM_SCHOOL FROM CP050CPC_CAP_CYCLE CC, CP006CST_CYCLE_STATREASON_TYP ST, V_230_PROGRAM_COMPLETOR PCOM, TC0221PERC_PERSON_ELAR PERC, V_220_PROGRAM_ORG_LINK POL, (SELECT PER.PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER.PER_LAST_NAME)) PER_NAME, PER.PER_FIRST_NAME, PER.PER_MIDDLE_NAME, PER.PER_LAST_NAME FROM V_DM_PERSON PER) PER, (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID, INITCAP (PS_PER.PER_FIRST_NAME) PS_FIRST_NAME, INITCAP (PS_PER.PER_MIDDLE_NAME) PS_MIDDLE_NAME, INITCAP (PS_PER.PER_LAST_NAME) PS_LAST_NAME, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) PS_NAME FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN, V_DM_PERSON PS_PER WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723) PS, ( SELECT SP_CYCLE_ID, LISTAGG (SP_PERSON_ID, ';') WITHIN GROUP (ORDER BY SP_PERSON_ID) SP_PERSON_ID, LISTAGG (SP_NAME, ';') WITHIN GROUP (ORDER BY SP_PERSON_ID, SP_NAME) SP_NAME, LISTAGG (PRACTICUM_SCHOOL, ';') WITHIN GROUP (ORDER BY SP_PERSON_ID, PRACTICUM_SCHOOL) PRACTICUM_SCHOOL FROM (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PER_PERSON_ID SP_PERSON_ID, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) SP_NAME, PARENTORG.ORG_NAME || ': ' || ORG.ORG_NAME PRACTICUM_SCHOOL FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_PERSON PS_PER, V_DM_ORGANIZATION ORG, V_DM_ORGANIZATION PARENTORG WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND SP_ASSGN.CPA_PRACTICUM_ORG_ID = ORG.ORG_ID AND PARENTORG.ORG_ID = NVL(ORG.ORG_PARENT_ORG_ID, ORG.ORG_ID) AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 UNION SELECT OOS_SP.SOA_CYCLE_ID SP_CYCLE_ID, NULL AS SP_PERSON_ID, INITCAP (OOS_SP.SOA_PER_FIRST_NAME) || ' ' || INITCAP (OOS_SP.SOA_PER_LAST_NAME) SP_NAME, OOS_SP.SOA_PRACTICUM_DISTRICT || ': ' || OOS_SP.SOA_PRACTICUM_SCHOOL_NAME PRACTICUM_SCHOOL FROM CP052SOA_SP_OUTOFSTATE_ASGNMT OOS_SP WHERE OOS_SP.SOA_EXP_DATE IS NULL) GROUP BY SP_CYCLE_ID) SP, ( SELECT GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N') GOP, MAX (GOP_EFF_DATE) GOP_EFF_DATE FROM CP060GOP_GOAL_PLAN WHERE GOP_EXP_DATE IS NULL AND GOP_GOAL_PLAN_TYPE_CODE = '2' GROUP BY GOP_CYCLE_ID, NVL (GOP_COMPLETE, 'N')) G, ( SELECT AST_CYCLE_ID, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '1' AND ( AST_COMPLETED <> 'Y' AND AST_PS_APPROVED = 'Y' AND (NVL (AST_PS_APPROVED, 'N') = NVL (AST_SP_APPROVED, 'N'))) THEN 'P' WHEN AST_ASMT_TYPE_CODE = '1' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SELF_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND ( AST_COMPLETED <> 'Y' AND AST_PS_APPROVED = 'Y' AND (NVL (AST_PS_APPROVED, 'N') = NVL (AST_SP_APPROVED, 'N'))) THEN 'P' WHEN AST_ASMT_TYPE_CODE = '2' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) FORM_ASMT, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND ( AST_COMPLETED <> 'Y' AND AST_PS_APPROVED = 'Y' AND (NVL (AST_PS_APPROVED, 'N') = NVL (AST_SP_APPROVED, 'N'))) THEN 'P' WHEN AST_ASMT_TYPE_CODE = '3' AND AST_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) SUMM_ASMT, MAX (AST_EFF_DATE) AST_EFF_DATE FROM CP056AST_ASSESSMENT WHERE AST_EXP_DATE IS NULL GROUP BY AST_CYCLE_ID) AST, ( SELECT OBS_CYCLE_ID, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) ANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '01' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) ANNOUNCED_OBS_2, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 1 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) UNANNOUNCED_OBS_1, MAX ( CASE WHEN OBS_OBSERVATION_TYPE_CODE = '02' AND OBS_OBSERVATION_NUMBER = 2 AND OBS_COMPLETED = 'Y' THEN 'Y' ELSE 'N' END) UNANNOUNCED_OBS_2, MAX (OBS_EFF_DATE) OBS_EFF_DATE FROM CP052OBS_OBSERVATION WHERE OBS_EXP_DATE IS NULL GROUP BY OBS_CYCLE_ID) OBS WHERE CC.CPC_PCOM_ID = PCOM.V_PCOM_ID AND CC.CPC_CYCLE_ID = PS.PS_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = SP.SP_CYCLE_ID(+) AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID AND CC.CPC_CYCLE_ID = G.GOP_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+) AND CC.CPC_CYCLE_ID = OBS.OBS_CYCLE_ID(+) AND CC.CPC_CST_STATUS_CODE = ST.CST_STATUS_CODE(+) AND POL.V_ORG_CODE = :orgCode AND ( NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear) AND ( NVL (CC.CPC_CST_STATUS_CODE, 'Open') = :statusCode OR '0' = :allStatus)
capManagerReport=SELECT POL.V_ORG_NAME ORGANIZATION, CC.CPC_CYCLE_ID, PRACTICUM_DISTRICT, PRACTICUM_SCHOOL, CC.CPC_SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, SD.SD_MEPID_SR01 CANDIDATE_MEPID, INITCAP (PER.PER_FIRST_NAME) CANDIDATE_FIRST_NAME, INITCAP (PER.PER_LAST_NAME) CANDIDATE_LAST_NAME, PER.EMAIL_ADD AS CANDIDATE_EMAIL_ADDRESS, PS_FIRST_NAME || ' ' || PS_LAST_NAME PS_NAME, PS.EMAIL_ADD AS PS_EMAIL_ADDRESS, SP.SP_NAME, SP.EMAIL_ADD SP_EMAIL_ADDRESS, F1A4Q, F1A4S, F1A4C, F1B2Q, F1B2S, F1B2C, F2A3Q, F2A3S, F2A3C, F2B1Q, F2B1S, F2B1C, F2D2Q, F2D2S, F2D2C, F4A1Q, F4A1S, F4A1C, S1A4Q, S1A4S, S1A4C, S1B2Q, S1B2S, S1B2C, S2A3Q, S2A3S, S2A3C, S2B1Q, S2B1S, S2B1C, S2D2Q, S2D2S, S2D2C, S4A1Q, S4A1S, S4A1C, NVL (CPC_READY_TO_TEACH, 'I') CPC_READY_TO_TEACH, 'CAP System' AS DATA_SOURCE, SP.SP_MEPID FROM CP050CPC_CAP_CYCLE CC, CP006CST_CYCLE_STATREASON_TYP ST, V_230_PROGRAM_COMPLETOR PCOM, TC0221PERC_PERSON_ELAR PERC, V_220_PROGRAM_ORG_LINK POL, EM002SD_STAFF_DIR SD, (SELECT PER.PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER.PER_LAST_NAME)) PER_NAME, PER.PER_FIRST_NAME, PER.PER_MIDDLE_NAME, PER.PER_LAST_NAME, C.EMAIL_ADD, C.ORG_ID FROM DM0002PER_PERSON PER, V_DM_PERSON_CONTACT C WHERE PER.PER_PERSON_ID = C.PERSON_ID(+) AND C.FUNC_TYP_CODE(+) = '72' ) PER, (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID, PS_PER.PER_FIRST_NAME PS_FIRST_NAME, PS_PER.PER_MIDDLE_NAME PS_MIDDLE_NAME, PS_PER.PER_LAST_NAME PS_LAST_NAME, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) PS_NAME, C.EMAIL_ADD, C.ORG_ID FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN, DM0002PER_PERSON PS_PER, V_DM_PERSON_CONTACT C WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_PER.PER_PERSON_ID = C.PERSON_ID (+) AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723 AND C.FUNC_TYP_CODE(+) = '31' ) PS, (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PARENTORG.ORG_NAME PRACTICUM_DISTRICT, ORG.ORG_NAME PRACTICUM_SCHOOL, PER_PERSON_ID SP_PERSON_ID, PS_PER.MUK_MEPID SP_MEPID, PS_PER.SP_NAME, PS_PER.EMAIL_ADD, PS_PER.ORG_ID SP_SO_ORG_ID, PS_PER.ORG_ID USER_ORG_ID FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_ORGANIZATION ORG, V_DM_ORGANIZATION PARENTORG, (SELECT PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER_LAST_NAME)) SP_NAME, MUK.MUK_MEPID, C.EMAIL_ADD, C.ORG_ID FROM DM0002PER_PERSON PER, DM0165MUK_MEPID_USER_LINK MUK, V_DM_PERSON_CONTACT C WHERE PER.PER_PERSON_ID = C.PERSON_ID(+) AND PER.USER_ID = MUK.MUK_USER_ID (+) AND C.FUNC_TYP_CODE(+) = '31' ) PS_PER WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND CPA_PRACTICUM_ORG_ID = ORG.ORG_ID AND PARENTORG.ORG_ID = NVL(ORG.ORG_PARENT_ORG_ID,ORG.ORG_ID) AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 UNION SELECT OOS_SP.SOA_CYCLE_ID SP_CYCLE_ID, SOA_PRACTICUM_DISTRICT, SOA_PRACTICUM_SCHOOL_NAME, NULL AS SP_PERSON_ID, NULL AS SP_MEPID, INITCAP (OOS_SP.SOA_PER_FIRST_NAME) || ' ' || INITCAP (OOS_SP.SOA_PER_LAST_NAME) SP_NAME, NULL AS EMAIL_ADD, POL.V_ORG_ID SP_SO_ORG_ID, NULL AS USER_ORG_ID FROM CP050CPC_CAP_CYCLE C, CP052SOA_SP_OUTOFSTATE_ASGNMT OOS_SP, V_230_PROGRAM_COMPLETOR PCOM, V_220_PROGRAM_ORG_LINK POL WHERE C.CPC_PCOM_ID = PCOM.V_PCOM_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND C.CPC_CYCLE_ID = OOS_SP.SOA_CYCLE_ID AND OOS_SP.SOA_EXP_DATE IS NULL ) SP, (SELECT AST.AST_CYCLE_ID, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1A4Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1A4S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1A4C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1B2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1B2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1B2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2A3Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2A3S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2A3C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2B1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2B1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2B1C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2D2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2D2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2D2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F4A1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F4A1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F4A1C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1A4Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1A4S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1A4C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1B2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1B2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1B2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2A3Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2A3S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2A3C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2B1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2B1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2B1C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2D2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2D2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2D2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S4A1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S4A1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S4A1C FROM CP056AST_ASSESSMENT AST, CP055RUM_RUBRIC_MAP RUM, CP009REL_RATING_ELEMENT_LINK REL, CP006RDT_RUBRIC_DIMENSION_TYP D, CP004RET_RUBRIC_ELEMENT_TYP EL WHERE AST.AST_EXP_DATE IS NULL AND RUM_EXP_DATE IS NULL AND REL.REL_EXP_DATE IS NULL AND D.RDT_EXP_DATE IS NULL AND EL.RET_EXP_DATE IS NULL AND AST.AST_ASSESSMENT_ID = RUM.RUM_ASSESSMENT_ID AND RUM.RUM_RATING_ELEMENT_LINK_ID = REL.REL_RATING_ELEMENT_LINK_ID AND RUM.RUM_RUBRIC_DIMENSION_CODE = D.RDT_RUBRIC_DIMENSION_CODE AND REL.REL_ELEMENT_CODE = EL.RET_ELEMENT_CODE GROUP BY AST.AST_CYCLE_ID ) AST WHERE CC.CPC_PCOM_ID = PCOM.V_PCOM_ID AND CC.CPC_CYCLE_ID = PS.PS_CYCLE_ID(+) AND POL.V_ORG_ID = PS.ORG_ID(+) AND CC.CPC_CYCLE_ID = SP.SP_CYCLE_ID(+) AND POL.V_ORG_ID = NVL(SP.USER_ORG_ID(+),POL.V_ORG_ID) AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID AND PERC.PERC_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID AND SD.SD_ACTIVE = 'Y' AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+) AND CC.CPC_CST_STATUS_CODE = ST.CST_STATUS_CODE(+) AND POL.V_ORG_CODE = ( CASE WHEN :orgCode = '1' THEN POL.V_ORG_CODE ELSE :orgCode END ) AND ( NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) AND CPC_CST_STATUS_CODE = '01' UNION SELECT * FROM (/*FOR INSTATE SPS*/ SELECT ORG.ORG_NAME ORGANIZATION, FUR.FUR_FUP_ID, PARENTORG.ORG_NAME PRACTICUM_DISTRICT, SCH.ORG_NAME PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, INITCAP (SP.SD_FIRST_NAME_SR04) || ' ' || INITCAP (SP.SD_LAST_NAME_SR06) SP_NAME, FUP_SP_EMAIL SP_EMAIL_ADDRESS, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1C, UPPER (FUP_READY_TO_TEACH) READY_TO_TEACH, 'Imported' AS DATA_SOURCE, FUP_SP_MEPID AS SP_MEPID FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, DM0005ORG_ORGANIZATION sch, DM0005ORG_ORGANIZATION parentorg, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN, EM002SD_STAFF_DIR SP, CP072FUR_FILE_UPLOAD_RATING FUR, CP009REL_RATING_ELEMENT_LINK REL, CP006RDT_RUBRIC_DIMENSION_TYP D, CP004RET_RUBRIC_ELEMENT_TYP EL, CP005ATP_ASSESMENT_TYPE AT WHERE FUP.FUP_UPLOAD_ID = FUR_FUP_ID AND FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRACT_SCH_ID = SCH.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND NVL(SCH.ORG_PARENT_ORG_ID,SCH.ORG_ID) = PARENTORG.ORG_ID(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUP.FUP_SP_MEPID = SP.SD_MEPID_SR01 AND FUR.FUR_ASMT_TYPE_CODE = AT.ATP_ASMT_TYPE_CODE AND FUR_REL_ID = REL.REL_RATING_ELEMENT_LINK_ID AND FUP.FUP_EXP_DATE IS NULL AND FUR.FUR_EXP_DATE IS NULL AND REL.REL_EXP_DATE IS NULL AND D.RDT_EXP_DATE IS NULL AND EL.RET_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NOT NULL AND FUP.FUP_STATUS_CODE ='1' AND FUR.FUR_RDT_CODE = D.RDT_RUBRIC_DIMENSION_CODE AND REL.REL_ELEMENT_CODE = EL.RET_ELEMENT_CODE AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ) AND ( NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) GROUP BY ORG.ORG_NAME, FUR.FUR_FUP_ID, PARENTORG.ORG_NAME , SCH.ORG_NAME , TO_NUMBER (FUP_SCH_YEAR_NUM) , V_PROGRAM_DESC , FUP_CAND_MEPID , INITCAP (CAN.SD_FIRST_NAME_SR04) , INITCAP (CAN.SD_LAST_NAME_SR06) , FUP_CAND_EMAIL , FUP_PS_NAME , FUP_PS_EMAIL , INITCAP (SP.SD_FIRST_NAME_SR04) || ' ' || INITCAP (SP.SD_LAST_NAME_SR06) , FUP_SP_EMAIL , FUP_READY_TO_TEACH, 'Imported', FUP_SP_MEPID UNION /*FOR OUT OF STATE AND PRIVATE SPS*/ SELECT ORG.ORG_NAME ORGANIZATION, FUR.FUR_FUP_ID, FUP_OOS_DISTRICT PRACTICUM_DISTRICT, FUP_OOS_SCHOOL PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, FUP_OOS_SP SP_NAME, FUP_SP_EMAIL SP_EMAIL_ADDRESS, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1C, UPPER (FUP_READY_TO_TEACH) READY_TO_TEACH, 'Imported' AS DATA_SOURCE, FUP_SP_MEPID AS SP_MEPID FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN, CP072FUR_FILE_UPLOAD_RATING FUR, CP009REL_RATING_ELEMENT_LINK REL, CP006RDT_RUBRIC_DIMENSION_TYP D, CP004RET_RUBRIC_ELEMENT_TYP EL, CP005ATP_ASSESMENT_TYPE AT WHERE FUP.FUP_UPLOAD_ID = FUR_FUP_ID AND FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUR.FUR_ASMT_TYPE_CODE = AT.ATP_ASMT_TYPE_CODE AND FUR_REL_ID = REL.REL_RATING_ELEMENT_LINK_ID AND FUP.FUP_EXP_DATE IS NULL AND FUR.FUR_EXP_DATE IS NULL AND REL.REL_EXP_DATE IS NULL AND D.RDT_EXP_DATE IS NULL AND EL.RET_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NULL AND FUP.FUP_STATUS_CODE = '1' AND FUR.FUR_RDT_CODE = D.RDT_RUBRIC_DIMENSION_CODE AND REL.REL_ELEMENT_CODE = EL.RET_ELEMENT_CODE AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ) AND ( NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) GROUP BY ORG.ORG_NAME, FUR.FUR_FUP_ID, FUP_OOS_DISTRICT, FUP_OOS_SCHOOL , TO_NUMBER (FUP_SCH_YEAR_NUM) , V_PROGRAM_DESC , FUP_CAND_MEPID , INITCAP (CAN.SD_FIRST_NAME_SR04) , INITCAP (CAN.SD_LAST_NAME_SR06) , FUP_CAND_EMAIL , FUP_PS_NAME , FUP_PS_EMAIL , FUP_OOS_SP , FUP_SP_EMAIL , FUP_READY_TO_TEACH, 'Imported', FUP_SP_MEPID ) ORDER BY 2
capAdminReport=SELECT POL.V_ORG_NAME ORGANIZATION, CC.CPC_CYCLE_ID, PRACTICUM_DISTRICT, PRACTICUM_SCHOOL, CC.CPC_SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, SD.SD_MEPID_SR01 CANDIDATE_MEPID, INITCAP (PER.PER_FIRST_NAME) CANDIDATE_FIRST_NAME, INITCAP (PER.PER_LAST_NAME) CANDIDATE_LAST_NAME, PER.EMAIL_ADD AS CANDIDATE_EMAIL_ADDRESS, PS_FIRST_NAME || ' ' || PS_LAST_NAME PS_NAME, PS.EMAIL_ADD AS PS_EMAIL_ADDRESS, SP.SP_NAME, SP.EMAIL_ADD SP_EMAIL_ADDRESS, F1A4Q, F1A4S, F1A4C, F1B2Q, F1B2S, F1B2C, F2A3Q, F2A3S, F2A3C, F2B1Q, F2B1S, F2B1C, F2D2Q, F2D2S, F2D2C, F4A1Q, F4A1S, F4A1C, S1A4Q, S1A4S, S1A4C, S1B2Q, S1B2S, S1B2C, S2A3Q, S2A3S, S2A3C, S2B1Q, S2B1S, S2B1C, S2D2Q, S2D2S, S2D2C, S4A1Q, S4A1S, S4A1C, NVL (CPC_READY_TO_TEACH, 'I') CPC_READY_TO_TEACH, 'CAP System' AS DATA_SOURCE, SP.SP_MEPID FROM CP050CPC_CAP_CYCLE CC, CP006CST_CYCLE_STATREASON_TYP ST, V_230_PROGRAM_COMPLETOR PCOM, TC0221PERC_PERSON_ELAR PERC, V_220_PROGRAM_ORG_LINK POL, EM002SD_STAFF_DIR SD, (SELECT PER.PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER.PER_LAST_NAME)) PER_NAME, PER.PER_FIRST_NAME, PER.PER_MIDDLE_NAME, PER.PER_LAST_NAME, C.EMAIL_ADD, C.ORG_ID FROM DM0002PER_PERSON PER, V_DM_PERSON_CONTACT C WHERE PER.PER_PERSON_ID = C.PERSON_ID(+) AND C.FUNC_TYP_CODE(+) = '72' ) PER, (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID, PS_PER.PER_FIRST_NAME PS_FIRST_NAME, PS_PER.PER_MIDDLE_NAME PS_MIDDLE_NAME, PS_PER.PER_LAST_NAME PS_LAST_NAME, ( INITCAP (PS_PER.PER_FIRST_NAME) || ' ' || INITCAP (PS_PER.PER_LAST_NAME)) PS_NAME, C.EMAIL_ADD, C.ORG_ID FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN, DM0002PER_PERSON PS_PER, V_DM_PERSON_CONTACT C WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_PER.PER_PERSON_ID = C.PERSON_ID (+) AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723 AND C.FUNC_TYP_CODE(+) = '31' ) PS, (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PARENTORG.ORG_NAME PRACTICUM_DISTRICT, ORG.ORG_NAME PRACTICUM_SCHOOL, PER_PERSON_ID SP_PERSON_ID, PS_PER.MUK_MEPID SP_MEPID, PS_PER.SP_NAME, PS_PER.EMAIL_ADD, PS_PER.ORG_ID SP_SO_ORG_ID, PS_PER.ORG_ID USER_ORG_ID FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_ORGANIZATION ORG, V_DM_ORGANIZATION PARENTORG, (SELECT PER_PERSON_ID, ( INITCAP (PER.PER_FIRST_NAME) || ' ' || INITCAP (PER_LAST_NAME)) SP_NAME, MUK.MUK_MEPID, C.EMAIL_ADD, C.ORG_ID FROM DM0002PER_PERSON PER, DM0165MUK_MEPID_USER_LINK MUK, V_DM_PERSON_CONTACT C WHERE PER.PER_PERSON_ID = C.PERSON_ID(+) AND PER.USER_ID = MUK.MUK_USER_ID (+) AND C.FUNC_TYP_CODE(+) = '31' ) PS_PER WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND CPA_PRACTICUM_ORG_ID = ORG.ORG_ID AND PARENTORG.ORG_ID = NVL(ORG.ORG_PARENT_ORG_ID,ORG.ORG_ID) AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 UNION SELECT OOS_SP.SOA_CYCLE_ID SP_CYCLE_ID, SOA_PRACTICUM_DISTRICT, SOA_PRACTICUM_SCHOOL_NAME, NULL AS SP_PERSON_ID, NULL AS SP_MEPID, INITCAP (OOS_SP.SOA_PER_FIRST_NAME) || ' ' || INITCAP (OOS_SP.SOA_PER_LAST_NAME) SP_NAME, NULL AS EMAIL_ADD, POL.V_ORG_ID SP_SO_ORG_ID, NULL AS USER_ORG_ID FROM CP050CPC_CAP_CYCLE C, CP052SOA_SP_OUTOFSTATE_ASGNMT OOS_SP, V_230_PROGRAM_COMPLETOR PCOM, V_220_PROGRAM_ORG_LINK POL WHERE C.CPC_PCOM_ID = PCOM.V_PCOM_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND C.CPC_CYCLE_ID = OOS_SP.SOA_CYCLE_ID AND OOS_SP.SOA_EXP_DATE IS NULL ) SP, (SELECT AST.AST_CYCLE_ID, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1A4Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1A4S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1A4C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1B2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1B2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F1B2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2A3Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2A3S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2A3C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2B1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2B1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2B1C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2D2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2D2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F2D2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F4A1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F4A1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '2' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) F4A1C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1A4Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1A4S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '01' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1A4C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1B2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1B2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '02' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S1B2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2A3Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2A3S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '03' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2A3C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2B1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2B1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '04' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2B1C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2D2Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2D2S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '05' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S2D2C, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S4A1Q, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S4A1S, MAX ( CASE WHEN AST_ASMT_TYPE_CODE = '3' AND REL_ELEMENT_CODE = '06' AND RDT_DIMENSION_SHORT_DESC = 'C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) S4A1C FROM CP056AST_ASSESSMENT AST, CP055RUM_RUBRIC_MAP RUM, CP009REL_RATING_ELEMENT_LINK REL, CP006RDT_RUBRIC_DIMENSION_TYP D, CP004RET_RUBRIC_ELEMENT_TYP EL WHERE AST.AST_EXP_DATE IS NULL AND RUM_EXP_DATE IS NULL AND REL.REL_EXP_DATE IS NULL AND D.RDT_EXP_DATE IS NULL AND EL.RET_EXP_DATE IS NULL AND AST.AST_ASSESSMENT_ID = RUM.RUM_ASSESSMENT_ID AND RUM.RUM_RATING_ELEMENT_LINK_ID = REL.REL_RATING_ELEMENT_LINK_ID AND RUM.RUM_RUBRIC_DIMENSION_CODE = D.RDT_RUBRIC_DIMENSION_CODE AND REL.REL_ELEMENT_CODE = EL.RET_ELEMENT_CODE GROUP BY AST.AST_CYCLE_ID ) AST WHERE CC.CPC_PCOM_ID = PCOM.V_PCOM_ID AND CC.CPC_CYCLE_ID = PS.PS_CYCLE_ID(+) AND POL.V_ORG_ID = PS.ORG_ID(+) AND CC.CPC_CYCLE_ID = SP.SP_CYCLE_ID(+) AND POL.V_ORG_ID = NVL(SP.USER_ORG_ID(+),POL.V_ORG_ID) AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID AND PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID AND PERC.PERC_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID AND SD.SD_ACTIVE = 'Y' AND CC.CPC_CYCLE_ID = AST.AST_CYCLE_ID(+) AND CC.CPC_CST_STATUS_CODE = ST.CST_STATUS_CODE(+) AND POL.V_ORG_CODE = ( CASE WHEN :orgCode = '1' THEN POL.V_ORG_CODE ELSE :orgCode END ) AND ( NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (cc.cpc_school_year, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) AND CPC_CST_STATUS_CODE = '01' UNION SELECT * FROM (/*FOR INSTATE SPS*/ SELECT ORG.ORG_NAME ORGANIZATION, FUR.FUR_FUP_ID, PARENTORG.ORG_NAME PRACTICUM_DISTRICT, SCH.ORG_NAME PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, INITCAP (SP.SD_FIRST_NAME_SR04) || ' ' || INITCAP (SP.SD_LAST_NAME_SR06) SP_NAME, FUP_SP_EMAIL SP_EMAIL_ADDRESS, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1C, UPPER (FUP_READY_TO_TEACH) READY_TO_TEACH, 'Imported' AS DATA_SOURCE, FUP_SP_MEPID AS SP_MEPID FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, DM0005ORG_ORGANIZATION sch, DM0005ORG_ORGANIZATION parentorg, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN, EM002SD_STAFF_DIR SP, CP072FUR_FILE_UPLOAD_RATING FUR, CP009REL_RATING_ELEMENT_LINK REL, CP006RDT_RUBRIC_DIMENSION_TYP D, CP004RET_RUBRIC_ELEMENT_TYP EL, CP005ATP_ASSESMENT_TYPE AT WHERE FUP.FUP_UPLOAD_ID = FUR_FUP_ID AND FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRACT_SCH_ID = SCH.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND NVL(SCH.ORG_PARENT_ORG_ID,SCH.ORG_ID) = PARENTORG.ORG_ID(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUP.FUP_SP_MEPID = SP.SD_MEPID_SR01 AND FUR.FUR_ASMT_TYPE_CODE = AT.ATP_ASMT_TYPE_CODE AND FUR_REL_ID = REL.REL_RATING_ELEMENT_LINK_ID AND FUP.FUP_EXP_DATE IS NULL AND FUR.FUR_EXP_DATE IS NULL AND REL.REL_EXP_DATE IS NULL AND D.RDT_EXP_DATE IS NULL AND EL.RET_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NOT NULL AND FUP.FUP_STATUS_CODE ='1' AND FUR.FUR_RDT_CODE = D.RDT_RUBRIC_DIMENSION_CODE AND REL.REL_ELEMENT_CODE = EL.RET_ELEMENT_CODE AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ) AND ( NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) GROUP BY ORG.ORG_NAME, FUR.FUR_FUP_ID, PARENTORG.ORG_NAME , SCH.ORG_NAME , TO_NUMBER (FUP_SCH_YEAR_NUM) , V_PROGRAM_DESC , FUP_CAND_MEPID , INITCAP (CAN.SD_FIRST_NAME_SR04) , INITCAP (CAN.SD_LAST_NAME_SR06) , FUP_CAND_EMAIL , FUP_PS_NAME , FUP_PS_EMAIL , INITCAP (SP.SD_FIRST_NAME_SR04) || ' ' || INITCAP (SP.SD_LAST_NAME_SR06) , FUP_SP_EMAIL , FUP_READY_TO_TEACH, 'Imported', FUP_SP_MEPID UNION /*FOR OUT OF STATE AND PRIVATE SPS*/ SELECT ORG.ORG_NAME ORGANIZATION, FUR.FUR_FUP_ID, FUP_OOS_DISTRICT PRACTICUM_DISTRICT, FUP_OOS_SCHOOL PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, FUP_OOS_SP SP_NAME, FUP_SP_EMAIL SP_EMAIL_ADDRESS, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'F4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS F4A1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1A4C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1A4C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S1B2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S1B2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2A3C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2A3C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2B1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2B1C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S2D2C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S2D2C, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1Q' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1Q, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1S' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1S, MAX ( CASE WHEN SUBSTR (ATP_ASMT_TYPE_DESC, 1, 1) || REPLACE (RET_ELEMENT_LABEL, '.', '') || RDT_DIMENSION_SHORT_DESC = 'S4A1C' THEN REL_RUB_RATING_SHORT_DESC ELSE NULL END ) AS S4A1C, UPPER (FUP_READY_TO_TEACH) READY_TO_TEACH, 'Imported' AS DATA_SOURCE, FUP_SP_MEPID AS SP_MEPID FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN, CP072FUR_FILE_UPLOAD_RATING FUR, CP009REL_RATING_ELEMENT_LINK REL, CP006RDT_RUBRIC_DIMENSION_TYP D, CP004RET_RUBRIC_ELEMENT_TYP EL, CP005ATP_ASSESMENT_TYPE AT WHERE FUP.FUP_UPLOAD_ID = FUR_FUP_ID AND FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUR.FUR_ASMT_TYPE_CODE = AT.ATP_ASMT_TYPE_CODE AND FUR_REL_ID = REL.REL_RATING_ELEMENT_LINK_ID AND FUP.FUP_EXP_DATE IS NULL AND FUR.FUR_EXP_DATE IS NULL AND REL.REL_EXP_DATE IS NULL AND D.RDT_EXP_DATE IS NULL AND EL.RET_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NULL AND FUP.FUP_STATUS_CODE = '1' AND FUR.FUR_RDT_CODE = D.RDT_RUBRIC_DIMENSION_CODE AND REL.REL_ELEMENT_CODE = EL.RET_ELEMENT_CODE AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ) AND ( NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) GROUP BY ORG.ORG_NAME, FUR.FUR_FUP_ID, FUP_OOS_DISTRICT, FUP_OOS_SCHOOL , TO_NUMBER (FUP_SCH_YEAR_NUM) , V_PROGRAM_DESC , FUP_CAND_MEPID , INITCAP (CAN.SD_FIRST_NAME_SR04) , INITCAP (CAN.SD_LAST_NAME_SR06) , FUP_CAND_EMAIL , FUP_PS_NAME , FUP_PS_EMAIL , FUP_OOS_SP , FUP_SP_EMAIL , FUP_READY_TO_TEACH, 'Imported', FUP_SP_MEPID ) ORDER BY 2
orgList=SELECT DISTINCT POL.V_ORG_NAME ORGANIZATION,  POL.V_ORG_CODE ORG_CODE,  TO_CHAR(CC.CPC_SCHOOL_YEAR) CPC_SCHOOL_YEAR FROM CP050CPC_CAP_CYCLE CC,  CP006CST_CYCLE_STATREASON_TYP ST,  V_230_PROGRAM_COMPLETOR PCOM,  TC0221PERC_PERSON_ELAR PERC,  V_220_PROGRAM_ORG_LINK POL,  EM002SD_STAFF_DIR SD,  (SELECT PER.PER_PERSON_ID FROM V_DM_PERSON PER  ) PER WHERE CC.CPC_PCOM_ID  = PCOM.V_PCOM_ID AND PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID AND PCOM.V_PCOM_PROG_ID  = POL.V_PROG_ID AND PER.PER_PERSON_ID  = PERC.PERC_DA_PERSON_ID AND PERC.PERC_ELAR_PERSON_ID   = SD.SD_ELAR_PERSON_ID AND CC.CPC_CST_STATUS_CODE     = ST.CST_STATUS_CODE AND CC.CPC_CST_STATUS_CODE  = 1 UNION SELECT DISTINCT POL.V_ORG_NAME ORGANIZATION,  POL.V_ORG_CODE ORG_CODE,  FUP.FUP_SCH_YEAR_NUM   CPC_SCHOOL_YEAR FROM CP071FUP_FILE_UPLOAD FUP, V_220_PROGRAM_ORG_LINK POL WHERE FUP.FUP_SPONSORING_ORG_ID = POL.V_ORG_ID AND FUP.FUP_STATUS_CODE = 1 ORDER BY 1
daPersonId.from.elarPeronId=select  PERC_DA_PERSON_ID from TC0221PERC_PERSON_ELAR where PERC_ELAR_PERSON_ID=:elarPeronId
capCycles.schoolYears=select distinct CPC_SCHOOL_YEAR from CP050CPC_CAP_CYCLE CC INNER JOIN V_230_PROGRAM_COMPLETOR PCOM ON CC.CPC_PCOM_ID = PCOM.V_PCOM_ID INNER JOIN V_220_PROGRAM_ORG_LINK POL ON PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID WHERE POL.V_ORG_CODE =:orgCode and CPC_SCHOOL_YEAR is not null
capCycles.schoolYears.landing=select distinct CPC_SCHOOL_YEAR from CP050CPC_CAP_CYCLE CC INNER JOIN V_230_PROGRAM_COMPLETOR PCOM ON CC.CPC_PCOM_ID = PCOM.V_PCOM_ID INNER JOIN V_220_PROGRAM_ORG_LINK POL ON PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID WHERE CPC_SCHOOL_YEAR is not null
psCapCycles.schoolYears=select distinct CPC_SCHOOL_YEAR from CP050CPC_CAP_CYCLE CC INNER JOIN V_230_PROGRAM_COMPLETOR PCOM ON CC.CPC_PCOM_ID = PCOM.V_PCOM_ID INNER JOIN V_220_PROGRAM_ORG_LINK POL ON PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID INNER JOIN (SELECT PS_ASSGN.CPA_CYCLE_ID PS_CYCLE_ID, PER_PERSON_ID PS_PERSON_ID  FROM CP051CPA_CAP_ASSIGNMENT PS_ASSGN,  V_DM_PERSON PS_PER  WHERE PS_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND PS_ASSGN.CPA_EXP_DATE IS NULL AND PS_ASSGN.CPA_DA_ROLE_CODE = 723) PS  ON PS.PS_CYCLE_ID=CC.CPC_CYCLE_ID AND POL.V_ORG_CODE = :orgCode AND PS.PS_PERSON_ID = (CASE WHEN :personId = 1 THEN PS.PS_PERSON_ID ELSE :personId END) and CPC_SCHOOL_YEAR is not null 
spCapCycles.schoolYears=select distinct CPC_SCHOOL_YEAR from CP050CPC_CAP_CYCLE CC INNER JOIN V_230_PROGRAM_COMPLETOR PCOM ON CC.CPC_PCOM_ID = PCOM.V_PCOM_ID INNER JOIN V_220_PROGRAM_ORG_LINK POL ON PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID INNER JOIN (SELECT SP_ASSGN.CPA_CYCLE_ID SP_CYCLE_ID, PER_PERSON_ID SP_PERSON_ID FROM CP051CPA_CAP_ASSIGNMENT SP_ASSGN, V_DM_PERSON PS_PER WHERE SP_ASSGN.CPA_DA_PERSON_ID = PS_PER.PER_PERSON_ID AND SP_ASSGN.CPA_EXP_DATE IS NULL AND SP_ASSGN.CPA_DA_ROLE_CODE = 724 ) SP  ON SP.SP_CYCLE_ID=CC.CPC_CYCLE_ID WHERE SP.SP_PERSON_ID = :personId AND POL.V_ORG_CODE = :orgCode and CPC_SCHOOL_YEAR is not null
tcCapCycles.schoolYears=select distinct CPC_SCHOOL_YEAR from CP050CPC_CAP_CYCLE CC INNER JOIN V_230_PROGRAM_COMPLETOR PCOM ON CC.CPC_PCOM_ID = PCOM.V_PCOM_ID INNER JOIN V_220_PROGRAM_ORG_LINK POL ON PCOM.V_PCOM_PROG_ID = POL.V_PROG_ID INNER JOIN  TC0221PERC_PERSON_ELAR PERC ON PCOM.V_PCOM_ELAR_PERSON_ID = PERC.PERC_ELAR_PERSON_ID INNER JOIN (SELECT PER.PER_PERSON_ID FROM V_DM_PERSON PER) PER ON PER.PER_PERSON_ID = PERC.PERC_DA_PERSON_ID WHERE PER.PER_PERSON_ID = :personId and CPC_SCHOOL_YEAR is not null
cap.completion=SELECT CASE WHEN COUNT(1) >3 THEN 1 ELSE 0 END FROM CP052OBS_OBSERVATION WHERE OBS_COMPLETED ='Y' AND OBS_CYCLE_ID =:cycleId UNION ALL SELECT CASE WHEN COUNT(1) >1 THEN 1 ELSE 0 END FROM CP056AST_ASSESSMENT WHERE AST_COMPLETED ='Y' AND AST_ASMT_TYPE_CODE IN (2,3) AND AST_CYCLE_ID =:cycleId UNION ALL SELECT CASE WHEN COUNT(1) >2 THEN 1 ELSE 0 END FROM CP055TWM_THREE_WAY_MEETING WHERE TWM_MEETING_DATE IS NOT NULL AND TWM_CYCLE_ID =:cycleId UNION ALL SELECT CASE WHEN COUNT(1) >0 THEN 1 ELSE 0 END FROM CP050CPC_CAP_CYCLE c, (SELECT DISTINCT CGL_CYCLE_ID FROM CP080CGL_CYCLE_GRADE_LINK WHERE CGL_EXP_DATE IS NULL ) gl WHERE C.CPC_CYCLE_ID = GL.CGL_CYCLE_ID (+) and CPC_PRACTICUM_COURSE_NUMBER IS NOT NULL AND CPC_CREDIT_HOURS IS NOT NULL AND CPC_PRACTICUM_COURSE_TITLE IS NOT NULL AND NVL(CPC_PRACTICUM_GRADE_LEVEL,CGL_CYCLE_ID) IS NOT NULL AND CPC_CYCLE_ID =:cycleId
max.cycle.observationDate=select max(OBS_OBSERVATION_DATE)from CP052OBS_OBSERVATION where OBS_CYCLE_ID=:cycleId and obs_exp_date is null
evidence.source.observation=select OBE_OBS_ELEMENT_CODE,OBS_OBSERVATION_TYPE_CODE, OBS_OBSERVATION_NUMBER ,  case when OBE_CAL_EVIDENCE is not null then 1 else 0 end OBE_CAL_EVIDENCE from CP052OBS_OBSERVATION join CP053OBE_OBSERVATION_EVIDENCE on OBE_OBSERVATION_ID=OBS_OBSERVATION_ID WHERE  OBS_OBSERVATION_NUMBER in(01,02) AND OBS_OBSERVATION_TYPE_CODE in('01','02') AND obs_cycle_id=:cycleId and OBS_COMPLETED='Y'
evidence.source.finalgoal=select case when gop_ppg_goal_desc is not null then 1 else 0 end ppg, case when GOP_LEARNING_MEASURE is not null then 1 else 0 end msl from CP060GOP_GOAL_PLAN where GOP_CYCLE_ID=:cycleId and GOP_COMPLETE='Y'
cap.year.control=with CAP as(SELECT LEVEL idx,:currSchoolYear-LEVEL+1 school_year, (:currSchoolYear-LEVEL)||'-'||(:currSchoolYear-LEVEL+1) SCHOOL_YEAR_DESC FROM  DUAL CONNECT BY LEVEL <= 3) select school_year,SCHOOL_YEAR_DESC, TO_DATE('09/01/'||(school_year-1),'MM/DD/YYYY') start_date, TO_DATE('08/31/'||(school_year),'MM/DD/YYYY') end_date, case when idx =1 then 'Y' else 'N' end Active from CAP
cap.batch.control=select EGN_ID,EGN_EMAIL_TRIGGER_QUERY,EGN_RECIPIENT_QUERY,EGN_RECIPIENT_COLPARAMS,EGN_CET_TYPE_CODE,EGN_UPDATE_QUERY,EGN_UPDATE_COLPARAMS from CP076EGN_EMAIL_GENERATION where EGN_ID=:egnId
RubricMap.findRubricMapByAssessment=select RUM_RUBRIC_MAP_ID from CP055RUM_RUBRIC_MAP RMAP JOIN CP009REL_RATING_ELEMENT_LINK  RlINK ON RUM_RATING_ELEMENT_LINK_ID=REL_RATING_ELEMENT_LINK_ID where RUM_EXP_DATE IS NULL AND RUM_ASSESSMENT_ID=:assessmentId AND REL_ELEMENT_CODE=:elementCode AND RUM_RUBRIC_DIMENSION_CODE=:dimensionCode
findUserIdBYMEPID=select MUK_USER_ID from DM0165MUK_MEPID_USER_LINK where MUK_MEPID=:mepid
cap.importedCapReport=SELECT * FROM (SELECT ORG.ORG_NAME ORGANIZATION, FUP.FUP_UPLOAD_ID, NVL(PARENTORG.ORG_NAME,FUP_OOS_DISTRICT) PRACTICUM_DISTRICT, NVL(SCH.ORG_NAME,FUP_OOS_SCHOOL) PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, INITCAP (SP.SD_FIRST_NAME_SR04) || ' ' || INITCAP (SP.SD_LAST_NAME_SR06) SP_NAME, FUP_SP_EMAIL SP_EMAIL_ADDRESS, FUP_CREATE_DATE, FUP_STATUS_CODE FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, DM0005ORG_ORGANIZATION sch, DM0005ORG_ORGANIZATION parentorg, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN, EM002SD_STAFF_DIR SP WHERE FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRACT_SCH_ID = SCH.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND NVL(SCH.ORG_PARENT_ORG_ID,SCH.ORG_ID) = PARENTORG.ORG_ID(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUP.FUP_SP_MEPID = SP.SD_MEPID_SR01 AND FUP.FUP_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NOT NULL AND ( NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ) AND FUP.FUP_STATUS_CODE = ( CASE WHEN :statusCode = '0' THEN FUP.FUP_STATUS_CODE ELSE :statusCode END ) UNION SELECT ORG.ORG_NAME ORGANIZATION, FUP.FUP_UPLOAD_ID, FUP_OOS_DISTRICT PRACTICUM_DISTRICT, FUP_OOS_SCHOOL PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, FUP.FUP_OOS_SP, FUP_SP_EMAIL SP_EMAIL_ADDRESS, FUP_CREATE_DATE, FUP_STATUS_CODE FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN WHERE FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUP.FUP_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NULL AND ( NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) >= :fromSchoolYear AND NVL (FUP_SCH_YEAR_NUM, EXTRACT (YEAR FROM SYSDATE)) <= :toSchoolYear ) AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ) AND FUP.FUP_STATUS_CODE = ( CASE WHEN :statusCode = '0' THEN FUP.FUP_STATUS_CODE ELSE :statusCode END ) )
cap.importedCapInfo=SELECT * FROM (SELECT ORG.ORG_NAME ORGANIZATION, FUP.FUP_UPLOAD_ID, NVL(PARENTORG.ORG_NAME,FUP_OOS_DISTRICT) PRACTICUM_DISTRICT, NVL(SCH.ORG_NAME,FUP_OOS_SCHOOL) PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, INITCAP (SP.SD_FIRST_NAME_SR04) || ' ' || INITCAP (SP.SD_LAST_NAME_SR06) SP_NAME, FUP_SP_EMAIL SP_EMAIL_ADDRESS, FUP_CREATE_DATE, FUP_STATUS_CODE FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, DM0005ORG_ORGANIZATION sch, DM0005ORG_ORGANIZATION parentorg, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN, EM002SD_STAFF_DIR SP WHERE FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRACT_SCH_ID = SCH.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND NVL(SCH.ORG_PARENT_ORG_ID,SCH.ORG_ID) = PARENTORG.ORG_ID(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUP.FUP_SP_MEPID = SP.SD_MEPID_SR01 AND FUP.FUP_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NOT NULL AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ) UNION SELECT ORG.ORG_NAME ORGANIZATION, FUP.FUP_UPLOAD_ID, FUP_OOS_DISTRICT PRACTICUM_DISTRICT, FUP_OOS_SCHOOL PRACTICUM_SCHOOL, TO_NUMBER (FUP_SCH_YEAR_NUM) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM, FUP_CAND_MEPID CANDIDATE_MEPID, INITCAP (CAN.SD_FIRST_NAME_SR04) CANDIDATE_FIRST_NAME, INITCAP (CAN.SD_LAST_NAME_SR06) CANDIDATE_LAST_NAME, FUP_CAND_EMAIL CANDIDATE_EMAIL_ADDRESS, FUP_PS_NAME PS_NAME, FUP_PS_EMAIL PS_EMAIL_ADDRESS, FUP.FUP_OOS_SP, FUP_SP_EMAIL SP_EMAIL_ADDRESS, FUP_CREATE_DATE, FUP_STATUS_CODE FROM CP071FUP_FILE_UPLOAD FUP, DM0005ORG_ORGANIZATION ORG, V_220_PROGRAM_ORG_LINK PROG, EM002SD_STAFF_DIR CAN WHERE FUP.FUP_SPONSORING_ORG_ID = ORG.ORG_ID(+) AND FUP.FUP_PRG_ID = PROG.V_PRG_ID(+) AND ORG.ORG_CODE = PROG.V_ORG_CODE(+) AND FUP.FUP_CAND_MEPID = CAN.SD_MEPID_SR01 AND FUP.FUP_EXP_DATE IS NULL AND FUP.FUP_PRACT_SCH_ID IS NULL AND ORG.ORG_CODE = ( CASE WHEN :orgCode = '1' THEN ORG.ORG_CODE ELSE :orgCode END ))  WHERE FUP_UPLOAD_ID=:uploadId
cap.folder.size=select nvl(round((sum(evf_file_size)/1048576),2),0) from CP065EVF_EVIDENCE_FILES where evf_cpc_id=:cycleId
assessment.isComplete=select COUNT(1) from CP056AST_ASSESSMENT where AST_CYCLE_ID=:cycleId AND AST_ASMT_TYPE_CODE=:typeCode AND AST_COMPLETED = 'Y' AND AST_EXP_DATE IS NULL
grad.level.list=select GLVL_GRD_LVL_CODE from V_DM_GRADE_LEVEL ORDER BY GLVL_GRD_LVL_SEQ_NUM
grad.level.list.cycle=select GRL.CGL_GRADE_LEVEL_CODE  from CP080CGL_CYCLE_GRADE_LINK GRL JOIN V_DM_GRADE_LEVEL LVL ON  LVL.GLVL_GRD_LVL_CODE=GRL.CGL_GRADE_LEVEL_CODE WHERE GRL.CGL_CYCLE_ID=:cycleId AND GRL.CGL_EXP_DATE IS NULL ORDER BY GLVL_GRD_LVL_SEQ_NUM
group.code.list=select OGL.OGL_OBS_GROUP_CODE  from CP081OGL_OBS_GROUP_LINK OGL where OGL.OGL_OBSERVATION_ID =:observationId  and OGL_EXP_DATE IS  NULL ORDER BY OGL_OBS_GROUP_CODE
verifycycle.orgList=SELECT DISTINCT V_ORG_ID, V_ORG_CODE, V_ORG_NAME FROM V_220_PROGRAM_ORG_LINK WHERE V_PROG_CAPS_IND = 'Y' ORDER BY 3
eqtCandidatesByProgramId=SELECT V_ORG_ID ORG_ID, V_ORG_CODE ORG_CODE, V_ORG_NAME ORG_NAME, (CASE WHEN SYSDATE < to_date('09/01/'||EXTRACT(YEAR FROM SYSDATE), 'MM/DD/YYYY') then (TO_CHAR(add_months(sysdate,-12), 'YY') ||'-'||TO_CHAR(SYSDATE, 'YY')) ELSE (TO_CHAR(add_months(sysdate,-24), 'YY') ||'-'||TO_CHAR(add_months(sysdate,-12), 'YY')) END) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM_NAME, PCOM_ID AS "V_PCOM_ID", PCOM_ELAR_PERSON_ID AS "V_PCOM_ELAR_PERSON_ID", PERC_DA_PERSON_ID AS "V_DA_PERSON_ID", INITCAP (PER_FIRST_NAME) AS "FIRST NAME", INITCAP (PER_MIDDLE_NAME) "MIDDLE NAME", INITCAP (PER_LAST_NAME) "LAST NAME", PCOM_EMAIL AS "V_PCOM_EMAIL", SD_MEPID_SR01 AS "V_MEPID", PCOM_PROG_ID AS "V_PCOM_PROG_ID", PCOM_STATUS_CODE AS "V_PCOM_STATUS_CODE", PST_STATUS_NAME AS "V_PST_STATUS_NAME", PCOM_ENROLLMENT_DATE AS "V_PCOM_ENROLLMENT_DATE", PCOM_EXIT_DATE AS "V_PCOM_EXIT_DAT" FROM TC0230PCOM_PROGRAM_COMPLETOR COM INNER JOIN TC0450PST_PCOM_STATUS_TYP ST ON COM.PCOM_STATUS_CODE = ST.PST_STATUS_CODE INNER JOIN TC0221PERC_PERSON_ELAR PE ON COM.PCOM_ELAR_PERSON_ID = PE.PERC_ELAR_PERSON_ID INNER JOIN V_220_PROGRAM_ORG_LINK PL ON COM.PCOM_PROG_ID = PL.V_PROG_ID LEFT OUTER JOIN EM002SD_STAFF_DIR SD ON COM.PCOM_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID INNER JOIN V_DM_PERSON PER ON PE.PERC_DA_PERSON_ID = PER.PER_PERSON_ID WHERE SD.SD_ACTIVE = 'Y' AND COM.PCOM_ELAR_PERSON_ID IS NOT NULL AND COM.PCOM_STATUS_CODE IN ('003', '004', '005','006') AND V_PROG_CAPS_IND = 'Y' AND V_PROG_PRG_ID = :programId AND V_ORG_CODE = :orgCode ORDER BY 2
eqtCandidatesByMEPID=SELECT V_ORG_ID ORG_ID, V_ORG_CODE ORG_CODE, V_ORG_NAME ORG_NAME, (CASE WHEN SYSDATE < to_date('09/01/'||EXTRACT(YEAR FROM SYSDATE), 'MM/DD/YYYY') then (TO_CHAR(add_months(sysdate,-12), 'YY') ||'-'||TO_CHAR(SYSDATE, 'YY')) ELSE (TO_CHAR(add_months(sysdate,-24), 'YY') ||'-'||TO_CHAR(add_months(sysdate,-12), 'YY')) END) SCHOOL_YEAR, V_PROGRAM_DESC PROGRAM_NAME, PCOM_ID AS "V_PCOM_ID", PCOM_ELAR_PERSON_ID AS "V_PCOM_ELAR_PERSON_ID", PERC_DA_PERSON_ID AS "V_DA_PERSON_ID", INITCAP (PER_FIRST_NAME) AS "FIRST NAME", INITCAP (PER_MIDDLE_NAME) "MIDDLE NAME", INITCAP (PER_LAST_NAME) "LAST NAME", PCOM_EMAIL AS "V_PCOM_EMAIL", SD_MEPID_SR01 AS "V_MEPID", PCOM_PROG_ID AS "V_PCOM_PROG_ID", PCOM_STATUS_CODE AS "V_PCOM_STATUS_CODE", PST_STATUS_NAME AS "V_PST_STATUS_NAME", PCOM_ENROLLMENT_DATE AS "V_PCOM_ENROLLMENT_DATE", PCOM_EXIT_DATE AS "V_PCOM_EXIT_DAT" FROM TC0230PCOM_PROGRAM_COMPLETOR COM INNER JOIN TC0450PST_PCOM_STATUS_TYP ST ON COM.PCOM_STATUS_CODE = ST.PST_STATUS_CODE INNER JOIN TC0221PERC_PERSON_ELAR PE ON COM.PCOM_ELAR_PERSON_ID = PE.PERC_ELAR_PERSON_ID INNER JOIN V_220_PROGRAM_ORG_LINK PL ON COM.PCOM_PROG_ID = PL.V_PROG_ID LEFT OUTER JOIN EM002SD_STAFF_DIR SD ON COM.PCOM_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID INNER JOIN V_DM_PERSON PER ON PE.PERC_DA_PERSON_ID = PER.PER_PERSON_ID WHERE SD.SD_ACTIVE = 'Y' AND COM.PCOM_ELAR_PERSON_ID IS NOT NULL AND COM.PCOM_STATUS_CODE IN ('003', '004', '005', '006') AND V_PROG_CAPS_IND = 'Y' AND V_ORG_CODE = :orgCode AND SD.SD_MEPID_SR01 = :mepid ORDER BY 2
correspondenceHistoryForCycle=SELECT CCC.CCC_CAP_EMAIL_ID,  CCC.CCC_CPC_ID,  CCC.CCC_TO_EMAIL_ADDR,  CCC.CCC_UPDATE_DATE,  PER.PER_FIRST_NAME  ||' '  ||PER.PER_LAST_NAME AS FULL_NAME,  POL.V_PROGRAM_DESC,  CCC.CCC_SUBJECT_LINE,  CCC.CCC_EMAIL_FILE_NAME AS EMAIL_BODY FROM CP067CCC_CYCLE_COMMUNICATION CCC,  DM0002PER_PERSON PER,  CP013CET_CAP_EMAIL_TYP CET,  CP050CPC_CAP_CYCLE CC,  TC0230PCOM_PROGRAM_COMPLETOR PCOM,  V_220_PROGRAM_ORG_LINK POL WHERE CCC.CCC_DA_PER_ID = PER.PER_PERSON_ID AND CCC.CCC_CET_EMAIL_TYPE_CODE = CET.CET_EMAIL_TYPE_CODE AND CCC.CCC_CPC_ID = CC.CPC_CYCLE_ID AND CC.CPC_PCOM_ID = PCOM.PCOM_ID AND PCOM.PCOM_PROG_ID = POL.V_PROG_ID AND CC.CPC_CYCLE_ID   = :cycleid AND CCC.CCC_TO_EMAIL_ADDR  IS NOT NULL AND CET.CET_EMAIL_TYPE_CODE <> 11 ORDER BY 6,  2 DESC
correspondenceBody=select '<HTML><BODY>' || CCC_SUBJECT_LINE || '<br>' ||CCC_EMAIL_FILE_NAME || '</BODY></HTML>' from CP067CCC_CYCLE_COMMUNICATION where CCC_CAP_EMAIL_ID = :communicationId
findValidCyclesReopening=SELECT CCC.CPC_CYCLE_ID CYCLE_ID,  NVL(CCC.CPC_CST_STATUS_CODE , 0) STATUS, 'APP' CYCLE_TYPE FROM CP050CPC_CAP_CYCLE CCC WHERE CCC.CPC_PCOM_ID IN  (SELECT CCC.CPC_PCOM_ID   FROM CP050CPC_CAP_CYCLE CCC   WHERE CCC.CPC_CYCLE_ID = :cycleId   ) AND (CCC.CPC_CST_STATUS_CODE IS NULL OR ( CCC.CPC_CST_STATUS_CODE  =1 AND CCC.CPC_READY_TO_TEACH    ='Y' AND CCC.CPC_CYCLE_ID <> :cycleId AND CCC.CPC_SCHOOL_YEAR =  (CASE   WHEN TRUNC(SYSDATE+30) < TO_DATE('09/01'  ||EXTRACT(YEAR FROM SYSDATE),'MM/DD/YYYY')  THEN EXTRACT(YEAR FROM SYSDATE)  ELSE EXTRACT(YEAR FROM SYSDATE)+ 1 END) ))   UNION  SELECT FUP.FUP_UPLOAD_ID CYCLE_ID, '01'  STATUS, 'UPLOAD' CYCLE_TYPE FROM TC0230PCOM_PROGRAM_COMPLETOR PCOM,  EM002SD_STAFF_DIR SD,  V_220_PROGRAM_ORG_LINK POL,   CP071FUP_FILE_UPLOAD FUP WHERE PCOM.PCOM_ELAR_PERSON_ID = SD.SD_ELAR_PERSON_ID AND PCOM.PCOM_PROG_ID  = POL.V_PROG_ID AND FUP.FUP_CAND_MEPID   = SD.SD_MEPID_SR01 AND FUP.FUP_PRG_ID = POL.V_PROG_PRG_ID  AND FUP.FUP_SPONSORING_ORG_ID = POL.V_ORG_ID AND PCOM.PCOM_ID IN  (SELECT CCC.CPC_PCOM_ID  FROM CP050CPC_CAP_CYCLE CCC  WHERE CCC.CPC_CYCLE_ID = :cycleId  )
findCapManagerByOrgid=select RL_ROLE_CODE,PER.PER_PERSON_ID,PER.PER_FIRST_NAME,PER.PER_LAST_NAME,OPF.ORGT_ORG_TYP_CODE,OPF.FT_FUNC_TYP_CODE,OPF.ORG_ID,CI.CI_CONTACT_ID,CI.CI_EMAIL_ADD,CI.CI_FAX_AREA_CODE,CI.CI_FAX_EXCHANGE,CI.CI_FAX_NUM,CI.CI_PHONE_AREA_CODE,CI.CI_PHONE_EXCHANGE,CI.CI_PHONE_NUM,CI.CI_PHONE_EXT,CI.ADDR_ADDRESS_ID from DM0002PER_PERSON per inner join DM0058URR_SEC_USER_RES_ROLE usr on usr.USER_ID = per.USER_ID inner join DM0005ORG_ORGANIZATION org on org.RES_RES_ID = usr.RES_RES_ID inner join DM0003OPF_ORG_PERSON_FUNC opf on opf.per_person_id = per.PER_PERSON_ID and FT_FUNC_TYP_CODE in (31)  and opf.ORG_ID = org.org_id left outer join DM0008CI_CONTACT_INFO CI  on CI.CI_CONTACT_ID = nvl(opf.CI_CONTACT_ID, per.CI_CONTACT_ID) where RL_ROLE_CODE=722 and  org.org_id=:orgId
programsEnrolledByElarPersonId=select POL.V_PROG_PRG_ID, POL.V_PROGRAM_DESC,  PCOM.PCOM_ID, PCOM.PCOM_ELAR_PERSON_ID, CC.CPC_CYCLE_ID from  TC0230PCOM_PROGRAM_COMPLETOR PCOM, V_220_PROGRAM_ORG_LINK  POL, CP050CPC_CAP_CYCLE CC where POL.V_PROG_ID = PCOM.PCOM_PROG_ID   and  PCOM.PCOM_ID=CC.CPC_PCOM_ID(+) and PCOM_ELAR_PERSON_ID =:elarPersonId 